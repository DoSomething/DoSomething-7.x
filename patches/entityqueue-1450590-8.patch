diff --git a/entityqueue.module b/entityqueue.module
index 06864da..43c79f3 100644
--- a/entityqueue.module
+++ b/entityqueue.module
@@ -36,11 +36,25 @@ function entityqueue_behavior_plugin_process(&$plugin, $info) {
  * Implements hook_permission().
  */
 function entityqueue_permission() {
-  return array(
+  $permissions = array(
     'administer queue types' => array(
       'title' => t('Administer queue types'),
     ),
+    'administer all queues' => array(
+      'title' => t('Administer all queues'),
+    ),
   );
+
+  $entities = entityqueue_load_multiple(array(), array('parent_name' => NULL));
+  foreach ($entities as $name => $entity) {
+    $permissions["edit $name queue"] = array(
+      'title' => t('Edit %queue queue items', array('%queue' => entity_label('entityqueue', $entity))),
+    );
+    $permissions["configure $name queue"] = array(
+      'title' => t('Configure %queue queue', array('%queue' => entity_label('entityqueue', $entity))),
+    );
+  }
+  return $permissions;
 }
 
 /**
@@ -178,8 +192,19 @@ function entityqueue_entity_property_info() {
 /**
  * Access callback for the entity API.
  */
-function entityqueue_access($op, $type = NULL, $account = NULL) {
-  return TRUE;
+function entityqueue_access($op, $entity = NULL, $account = NULL, $entity_type = NULL) {
+  if (user_access('administer all queues', $account) || $op == 'view') {
+    return TRUE;
+  }
+  if (!isset($entity)) {
+    return FALSE;
+  }
+
+  if ($op == 'create' || $op == 'update') {
+    $op = 'edit';
+  }
+
+  return user_access("$op $entity->name queue", $account);
 }
 
 /**
diff --git a/includes/entityqueue.admin.inc b/includes/entityqueue.admin.inc
index f265c57..ae29ff9 100644
--- a/includes/entityqueue.admin.inc
+++ b/includes/entityqueue.admin.inc
@@ -39,8 +39,8 @@ class EntityQueueUIController extends EntityDefaultUIController {
       'page callback' => 'drupal_get_form',
       'page arguments' => array($this->entityType . '_overview_form', $this->entityType, $id_count + 1),
       'load arguments' => array($this->entityType),
-      'access callback' => 'entityqueue_access',
-      'access arguments' => array('view', $this->entityType),
+      'access callback' => 'entity_access',
+      'access arguments' => array('edit', $this->entityType, $id_count + 1),
       'file' => $this->entityInfo['admin ui']['file'],
       'file path' => drupal_get_path('module', $this->entityInfo['module']),
     );
@@ -56,8 +56,8 @@ class EntityQueueUIController extends EntityDefaultUIController {
       'page callback' => 'entity_ui_get_form',
       'page arguments' => array($this->entityType, $id_count + 1, 'configure'),
       'load arguments' => array($this->entityType),
-      'access callback' => 'entityqueue_access',
-      'access arguments' => array('edit', $this->entityType),
+      'access callback' => 'entity_access',
+      'access arguments' => array('configure', $this->entityType, $id_count + 1),
       'file' => $this->entityInfo['admin ui']['file'],
       'file path' => drupal_get_path('module', $this->entityInfo['module']),
       'type' => MENU_LOCAL_TASK,
@@ -109,7 +109,14 @@ class EntityQueueUIController extends EntityDefaultUIController {
 
     $rows = array();
     foreach ($entities as $entity) {
-      $rows[] = $this->overviewTableRow($conditions, entity_id($this->entityType, $entity), $entity);
+      if (entity_access('edit', 'entityqueue', $entity)) {
+        $rows[] = $this->overviewTableRow($conditions, entity_id($this->entityType, $entity), $entity);
+      }
+    }
+    // If there aren't existing entityqueues and the user doesn't have the
+    // permission to add new ones, return.
+    if (empty($rows) && !entity_access('create', 'entityqueue')) {
+      drupal_access_denied();
     }
     // Assemble the right table header.
     $header = array(t('Label'));
