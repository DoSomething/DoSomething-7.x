<?php

/**
 * @file
 * Provide mobile commons integration for SMS framework.
 */

/**
 * Implements hook_gateway_info().
 */
function sms_mobile_commons_gateway_info() {
  return array(
    'sms_mobile_commons' => array(
      'name' => 'SMS Mobile Commons',
      'send' => 'sms_mobile_commons_send',
      'receive' => TRUE,
      'configure form' => 'sms_mobile_commons_admin_form',
      'send form' => 'sms_mobile_commons_send_form',
    )
  );
}

/**
 * Implementation of hook_admin_form().
 */
function sms_mobile_commons_admin_form($configuration) {
  /*$form = array(
    'email' => array(
      '#weight' => 0,
      '#type' => 'textfield',
      '#title' => t('Mobile Commons Email Account'),
      '#description' => t('Mobile Commons uses an email address as a user name 
        for authentication. Enter this email address here.'),
      '#default_value' => '',
      '#required' => TRUE,
      '#size' => 60,
      '#maxlength' => 255,
    ),
    'password' => array(
      '#weight' => 0,
      '#type' => 'password',
      '#title' => t('Mobile Commons password'),
      '#description' => t('The password associated with the Mobile Commons 
        account.'),
      //No need to pull the password back. We shouldn't show it.
      '#default_value' => '',
      '#required' => TRUE,
      '#size' => 60, 
      '#maxlength' => 255,
    ),
    'url' => array(
      '#weight' => 0,
      '#type' => 'textfield',
      '#title' => t('Mobile Commons custom URL'),
      '#description' => t('Each mobile commons account has a custom URL for 
        accessing information and sending data requests. This usually looks 
        like "http://MYSITE/mcommons.com".'),
      '#default_value' => '',
      '#required' => TRUE,
      '#size' => 60, 
      '#maxlength' => 255,
    ),
    'campaign_id' => array(
      '#weight' => 0,
      '#type' => 'textfield',
      '#title' => t('Campaign ID'),
      '#description' => t('People you plan to send SMS messages to need to be 
        part of a Mobile Commons campaign. Campains have a campaign ID number.'),
      '#default_value' => '',
      '#required' => TRUE,
      '#size' => 10, 
      '#maxlength' => 20,
    ),
    'submit' => array(
      '#weight' => 10,
      '#type' => 'submit',
      '#value' => t('Submit'),
      '#validate' => 'sms_mobile_commons_admin_page_validate',
      '#submit' => 'sms_mobile_commons_admin_page_submit',
    ),
  );
  
  return $form;
  */
  $form = array();
 dpm($configuration); 
  $form['sms_mobile_commons_custom_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Mobile Commons custom URL'),
    '#default_value' => $configuration['sms_mobile_commons_custom_url'],
  );
  $form['sms_mobile_commons_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#default_value' => $configuration['sms_mobile_commons_email'],
  );
  $form['sms_mobile_commons_campaign'] = array(
    '#type' => 'textfield',
    '#title' => t('Campaign ID'),
    '#default_value' => $configuration['sms_mobile_commons_campaign'],
  );
  $form['sms_mobile_commons_password'] = array(
    '#type' => 'password',
    '#title' => t('Password'),
    '#default_value' => $configuration['sms_mobile_commons_password'],
  );
  $form['sms_mobile_commons_response'] = array(
    '#type' => 'textfield',
    '#title' => t('Response text for mData.'),
    '#description' => t('A default response to give back when the site receives a message via mData. In most cases you will want to ignore the use of a default response and instead implement hook_sms_mobile_commons_response_alter().'),
    '#default_value' => $configuration['sms_mobile_commons_response'],
  );
  
  return $form;

}

function sms_mobile_commons_admin_page() {
  return drupal_get_form('sms_mobile_commons_admin_form');
}

function sms_mobile_commons_admin_page_validate($form, &$form_state) {
  dpm($form_state);
}

function  sms_mobile_commons_admin_page_submit($form, &$form_state) {

  dpm($form_state);
}

/**
 * Custom callback for incoming HTTP request.
 */
function sms_mobile_commons_incoming_callback() {  
  $message = $_REQUEST['args'];  
  $keyword = $_REQUEST['keyword'];
  $carrier = $_REQUEST['carrier'];
  $sender = $_REQUEST['phone'];
  $gateway = sms_gateways('gateway', 'sms_mobile_commons');
  $config = $gateway['configuration'];
  $output = $config['sms_mobile_commons_response'];
  drupal_alter('sms_mobile_commons_response', $output, $message, $sender, $keyword);
  sms_incoming($sender, $message, array("carrier" => $carrier, 'keyword' => $keyword, 'response' => $output));
  watchdog('sms_mobile_commons', 'Received message from %sender: %message and responded with %response', array('%sender' => $sender, '%message' => $message, '%response' => $output));
  $output =
  '<?xml version="1.0" encoding="UTF-8"?>
  <response>
   <reply>
    <text>
     <![CDATA[' . $output . ']]>
    </text>
   </reply>
  </response>';
  print $output;
  exit;
}

/**
 * Implements hook_menu().
 */
function sms_mobile_commons_menu() {
  $items = array();

  $items['sms/mobile-commons/receiver'] = array(
    'title' => 'Mobile Commons SMS receiver',
    'page callback' => 'sms_mobile_commons_incoming_callback',
    'access callback' => 'sms_mobile_commons_incoming_check',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Add a filter to ensure incoming texts are coming from Mobile Commons' IP.
 */
function sms_mobile_commons_incoming_check() {
  if ($_SERVER['REMOTE_ADDR'] == "64.22.127.76") {
    return TRUE;
  }
  return FALSE;
}
