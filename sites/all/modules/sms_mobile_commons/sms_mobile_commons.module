<?php

/**
 * @file
 * Provide mobile commons integration for SMS framework.
 */

/**
 * Implements hook_gateway_info().
 */
function sms_mobile_commons_gateway_info() {
  return array(
    'sms_mobile_commons' => array(
      'name' => 'SMS Mobile Commons',
      'send' => 'sms_mobile_commons_send',
      'receive' => TRUE,
      'configure form' => 'sms_mobile_commons_admin_form',
      'send form' => 'sms_mobile_commons_send_form',
    )
  );
}

/**
 * Implementation of hook_admin_form().
 */
function sms_mobile_commons_admin_form($configuration) {
  $form = array();
  $form['sms_mobile_commons_custom_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Mobile Commons custom URL'),
    '#default_value' => $configuration['sms_mobile_commons_custom_url'],
    '#description' => t('The custom URL used to access your Mobile Commons API. It often looks like "http://MYACCOUNT.mcommons.com".'),
    '#required' => TRUE,
  );
  $form['sms_mobile_commons_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#default_value' => $configuration['sms_mobile_commons_email'],
    '#description' => t('The email address that is used to authenticate you to Mobile Commons'),
    '#required' => TRUE,
  );
  $form['sms_mobile_commons_campaign'] = array(
    '#type' => 'textfield',
    '#title' => t('Campaign ID'),
    '#default_value' => $configuration['sms_mobile_commons_campaign'],
    '#description' => t('The campaign ID of your Mobile Commons campaign that the users are associted with.'),
  );
  $form['sms_mobile_commons_password'] = array(
    '#type' => 'password',
    '#title' => t('Password'),
    '#default_value' => $configuration['sms_mobile_commons_password'],
    '#description' => t('The password to access Mobile Commons APIs'),
    '#required' => TRUE,
  );
  $form['sms_mobile_commons_opt_in_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Opt In Path'),
    '#description' => t('The path on mobile commons that handles user opt-ins'),
    '#default_value' => $configuration['sms_mobile_commons_opt_in_path'],
  );

  return $form;
}

/**
 * Implementation of hook_form_alter().
 */
function sms_mobile_commons_form_sms_admin_gateway_form_alter(&$form, &$form_state) {
  $form['#validate'][] = 'sms_mobile_commons_admin_form_validate';
}

/**
 * Provides form validation for the SMS Mobile Commons gateway configuration.
 */
function sms_mobile_commons_admin_form_validate($form, &$form_state) {
  if (!valid_email_address($form_state['sms_mobile_commons_email'])) {
    form_set_error($name = 'sms_mobile_commons_email', $message = 'The email address was not valid');
  }
  if (!valid_url($form_state['sms_mobile_commons_custom_url'])) {
    form_set_error($name = 'sms_mobile_commons_custom_url', $message = 'The url was not valid');
  }
  if (!valid_url($form_state['sms_mobile_commons_opt_in_path'])) {
    form_set_error($name = 'sms_mobile_commons_opt_in_path', $message = 'The opt-in path was not valid');
  }
}

/**
 * Custom callback for incoming HTTP request.
 */
function sms_mobile_commons_incoming_callback() {  
  $message = $_REQUEST['args'];  
  $keyword = $_REQUEST['keyword'];
  $carrier = $_REQUEST['carrier'];
  $keyword = $_REQUEST['keyword'];
  $sender = $_REQUEST['phone'];

  watchdog('sms_mobile_commons', 'Received message from %sender: %message', array('%sender' => $sender, '%message' => $message));
  sms_incoming($sender, $message, array("carrier" => $carrier, 'keyword' => $keyword));
  watchdog('sms_mobile_commons', 'Received message ' . serialize($_SERVER));
}

/**
 * Implements hook_menu().
 */
function sms_mobile_commons_menu() {
  $items = array();

  $items['sms/mobile-commons/receiver'] = array(
    'title' => 'Mobile Commons SMS receiver',
    'page callback' => 'sms_mobile_commons_incoming_callback',
    'access callback' => 'sms_mobile_commons_incoming_check',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Add a filter to ensure incoming texts are coming from Mobile Commons' IP.
 */
function sms_mobile_commons_incoming_check() {
  if ($_SERVER['REMOTE_ADDR'] == "64.22.127.76") {
    return TRUE;
  }
  return FALSE;
}
