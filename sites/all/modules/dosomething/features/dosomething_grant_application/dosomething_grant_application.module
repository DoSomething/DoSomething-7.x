<?php
/**
 * @file
 * Code for the Dosomething - Grant Application feature.
 */

include_once('dosomething_grant_application.features.inc');

/**
 * Implements hook_form_alter().
 */
function dosomething_grant_application_form_alter(&$form, &$form_state, $form_id) {

  // Note that dosomething_grant_application,
  // dosomething_scholarship_application, dosomething_campaign_report_back, and
  // dosomething_campaign_sign_up all prepopulate data from the user's user and
  // main profile object and update those objects with newer data.  The code is
  // not *quite* common enough to completely generalize, so there is some
  // duplication.  If you need to make a change here you likely need to make it
  // in the other places as well.

  // Make sure we're dealing with the right form.
  if (strpos($form_id, 'webform_client_form_') !== 0 || empty($form_state['webform_entity']) || $form_state['webform_entity']['bundle'] != 'grant_application') {
    return;
  }

  global $user;
  // Take no action if this user is not authenticated.
  if ($user->uid == 0) {
    return;
  }

  // Load data.
  $profile = profile2_load_by_user($user, 'main');

  $augmented = FALSE;

  if ($profile) {
    $augmented = TRUE;
    // Load data.
    $profile = profile2_load_by_user($user, 'main');
    // Get a shortcut to our part of the form.
    $entity_form = &$form['submitted']['webform_entity_form'];

    $profile_wrapper = entity_metadata_wrapper('profile2', $profile);

    // If  the name is empty, prepoulate it with the user's name from her profile.
    if ($entity_form['field_webform_name'][LANGUAGE_NONE][0]['value']['#default_value'] == '') {
      $entity_form['field_webform_name'][LANGUAGE_NONE][0]['value']['#default_value'] = $profile_wrapper->field_user_first_name->value() . ' ' . $profile_wrapper->field_user_last_name->value() ;
    }

    // If we have a birthday, prepopulate the field.
    if (is_numeric($profile_wrapper->field_user_birthday->raw())) {
      $entity_form['field_webform_birthdate'][LANGUAGE_NONE][0]['#default_value']['value']  = date('Y-m-d H:i:s', $profile_wrapper->field_user_birthday->raw());
    }


    // If the mobile number is empty, prepopulate it.
    if ($entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] == '') {
      $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] = $profile_wrapper->field_user_mobile->value();
    }

    // If no address is yet set on this form, prepoulate it with the one from the user's profile.
    if ($form['#submission'] == array()) {
      $address_values = $form['submitted']['webform_entity_form']['field_webform_address'][LANGUAGE_NONE][0]['#address'];
      $form['submitted']['webform_entity_form']['field_webform_address'][LANGUAGE_NONE][0]['#address'] = $profile_wrapper->field_user_address->value();
    }
  }

  // If this email isn't actually a magic mobile number, prepopulate the form with it.
  if (substr($user->mail, -7) != '@mobile') {
    $augmented = TRUE;
    $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] = $user->mail;
  }

  if ($augmented) {
    // Attach our submit handler to update the user and profile objects with newer data.
    $form['#submit'][] = 'dosomething_grant_application_form_validate';
    $form['#validate'][] = 'dosomething_grant_application_form_submit';
  }
}

/**
 * Grant Application form submission callback.
 */
function dosomething_grant_application_form_validate(&$form, &$form_state) {
  global $user;
  // If the email is set, make sure we can update the user's email address.
  if (isset($form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email']) && $form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email'] != '') {
    $mail = $form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email'];
    $account = user_load_by_mail($mail);
    // If we found an account with that email address and the email address does not belong to this user, set an error.
    if ($account && $account->uid != $user->uid) {
      form_set_error('field_webform_email', t('You may not provide the email address of another user, do you have another account?'));
    }
  }
}

/**
 * Grant Application form submission callback.
 */
function dosomething_grant_application_form_submit(&$form, &$form_state) {
  global $user;
  if (isset($form_state['values']['field_webform_mobile'][LANGUAGE_NONE][0]['value']) && $form_state['values']['field_webform_mobile'][LANGUAGE_NONE][0]['value'] != '') {
    $profile = profile2_load_by_user($user, 'main');
    $profile->field_user_mobile[LANGUAGE_NONE][0]['value'] = $form_state['values']['field_webform_mobile'][LANGUAGE_NONE][0]['value'];
    $profile->save();
  }
  if (isset($form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email']) && $form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email'] != '') {
    $user->mail = $form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email'];
    user_save($user);
  }
}


/**
 * Implements hook_module_implements_alter().
 *
 * We can only disable our elements if we come after webform_entity, make
 * sure we do.
 */
function dosomething_grant_application_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['dosomething_grant_application'])) {
    $group = $implementations['dosomething_grant_application'];
    unset($implementations['dosomething_grant_application']);
    $implementations['dosomething_grant_application'] = $group;
  }
}
