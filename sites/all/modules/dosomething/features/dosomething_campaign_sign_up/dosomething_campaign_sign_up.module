<?php
/**
 * @file
 * Code for the Dosomething - Campaign Sign Up feature.
 */

include_once('dosomething_campaign_sign_up.features.inc');

/**
 * Implements hook_form_alter().
 */
function dosomething_campaign_sign_up_form_alter(&$form, &$form_state, $form_id) {

  // Note that dosomething_grant_application,
  // dosomething_scholarship_application, dosomething_campaign_report_back, and
  // dosomething_campaign_sign_up all prepopulate data from the user's user and
  // main profile object and update those objects with newer data.  The code is
  // not *quite* common enough to completely generalize, so there is some
  // duplication.  If you need to make a change here you likely need to make it
  // in the other places as well.

  if (strpos($form_id, 'webform_client_form_') !== 0 || empty($form_state['webform_entity']) || $form_state['webform_entity']['bundle'] != 'campaign_sign_up') {
    return;
  }

  global $user;
  // Take no action if this user is not authenticated.
  if ($user->uid == 0) {
    return;
  }

  $node = $form['#node'];

  // Get a shortcut to our part of the form.
  $entity_form = &$form['submitted']['webform_entity_form'];

  // The list field that specifies which fields on this form are enabled.
  $magic_fields_field = 'field_signup_magic_fields';
  $enabled_fields = array();

  // Make sure no one did something stupid like deleting our field.
  if (isset($node->{$magic_fields_field})) {
    // Get the allowed values.
    if ($items = field_get_items('node', $node, $magic_fields_field)) {
      foreach ($items as $item) {
        foreach ($item as $field) {
          $enabled_fields[] = $field;
        }
      }
    }
  }
  // Get the field info so that we can get the list of values to work with.
  $field_info = field_info_field($magic_fields_field);
  foreach ($field_info['settings']['allowed_values'] as $field_name => $label) {
    if (isset($entity_form[$field_name]) && !in_array($field_name, $enabled_fields)) {
      $entity_form[$field_name]['#access'] = FALSE;
    }
  }

  global $user;
  $profile = profile2_load_by_user($user, 'main');
  if ($profile) {
    // If we have a profile and don't have a value for the mobile number, provide the one from the profile as a default.
    $mobile = field_get_items('profile2', $profile, 'field_user_mobile');
    if (isset($mobile[0]['value']) && $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] == '') {
      $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] = $mobile[0]['value'];
    }
  }

  // If this email isn't actually a magic mobile number, prepopulate the form with it.
  if (substr($user->mail, -7) != '@mobile' && $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] == '') {
    $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] = $user->mail;
  }

  if ($ref = entity_metadata_wrapper('node', $node)->field_campaign->raw()) {
    if (module_exists('og') && is_object($group = og_get_group('node', $ref))) {
      $form_state['dosomething_campaign_signup_form_submit']['group'] = $group;
      $entity_form['group_audience'][LANGUAGE_NONE]['#default_value'] = array($group->gid);
      $entity_form['group_audience'][LANGUAGE_NONE]['#access'] = FALSE;
      $form['#submit'][] = 'dosomething_campaign_sign_up_webform_submission';
    }
  }

  $form['#validate'][] = 'dosomething_general_webform_email_and_mail_submit';
  $form['#submit'][] = 'dosomething_general_webform_email_and_mail_submit';

}

/**
 * Implements hook_module_implements_alter().
 */
function dosomething_campaign_sign_up_module_implements_alter(&$implementations, $hook) {
  // We can only disable our elements if we come after webform_entity, make sure we do.
  if ($hook == 'form_alter' && isset($implementations['dosomething_campaign_sign_up'])) {
    $group = $implementations['dosomething_campaign_sign_up'];
    unset($implementations['dosomething_campaign_sign_up']);
    $implementations['dosomething_campaign_sign_up'] = $group;
  }
}

/**
 * Submission callback for campaign signup webforms.
 */
function dosomething_campaign_sign_up_webform_submission($form, &$form_state) {
  // Add users to related organic group when they complete the sign-up.
  $uid = $form_state['values']['details']['uid'];
  if (isset($form_state['dosomething_campaign_signup_form_submit']['group'])) {
    $account = user_load($uid);
    og_group($form_state['dosomething_campaign_signup_form_submit']['group']->gid, array('entity' => $account));
  }
}
