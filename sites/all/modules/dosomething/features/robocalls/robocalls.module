<?php
/**
 * @file
 * Code for the DoSomething Robocalls feature.
 */

include_once 'robocalls.features.inc';
define('MCOMMONS_ROBOCALL_CAMPAIGN', 18301);
define('ROBOCALLS_WEBFORM_NID', 723327);//724089
define('MAX_CALLS_PER_DAY', 1);
define('ROUND_TO', 10);
define('ROBOCALLS_TAXONOMY_ID', variable_get('robocalls_taxonomy_vocab', 25));
define('ROBOCALLS_FEATURED_CELEB_TAG', 'Says Hayyy to Your Friends');
define('ROBOCALLS_MCOMMONS_ALPHAS_CAMPAIGN', 144433);

function robocalls_is_robo_page($page = '') {
  if (empty($page)) {
    $page = request_path();
  }
  if (strpos(request_uri(), 'calloffame')) {
    return true;
  }

  return false;
}

/**
 *  Implements hook_panels_pre_render()
 */
function robocalls_panels_pre_render($display) {
  if (robocalls_is_robo_page()) {
    // Adds Robocalls CSS
    drupal_add_css(drupal_get_path('module', 'robocalls') . '/css/robocalls.css', array(
        'group' => CSS_THEME,
        'weight' => 3000
    ));

    // Adds Robocalls JS
    drupal_add_js(drupal_get_path('module', 'robocalls') . '/js/robocalls.js', array(
        'weight' => -100,
        'cache' => FALSE
    ));
  }
}

/**
 *  Implements hook_ctools_plugin_directory().
 */
function robocalls_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 *  Sends a phone call request to Mobile Commons.
 *
 *  @param $mobile
 *    The phone number to call.
 *
 *  @param $name (optional)
 *    The name of the person who is calling.
 *
 *  @param $opt_in_path
 *    The numeric Mobile Commons opt in path ID
 *
 *  @return
 *    An object as defined from drupal_http_request()
 */
function robocalls_mcommons_call($mobile, $name = '', $opt_in_path) {
  $api_opt_in_path_url = 'https://dosomething.mcommons.com/profiles/join';

  // Send the post data.
  $options = array(
    'headers' => array(
      'Content-type' => 'application/x-www-form-urlencoded',
      'Accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    ),
    'method' => 'POST',
    'data' => "person[phone]=$mobile&person[user_s_name]=" . urlencode($name) . "&mconnect=$opt_in_path",
  );

  drupal_http_request($api_opt_in_path_url, $options);
}

/**
 *  Implements hook_module_implements_alter()
 */
function robocalls_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['robocalls'])) {
    $group = $implementations['robocalls'];
    unset($implementations['robocalls']);
    $implementations['robocalls'] = $group;
  }
}

function robocalls_get_celebrities() {
  $celebs = array();
  foreach (taxonomy_get_tree(ROBOCALLS_TAXONOMY_ID) AS $key => $celeb) {
    if ($celeb->parents[0] > 0 && $celeb->name != '???') {
      $celebs[$celeb->tid] = $celeb->name;
    }
  }

  return $celebs;
}

/**
 *  Implements hook_form_alter()
 */
function robocalls_form_alter(&$form, $form_state, $form_id) {
  global $term_info, $flags, $user;

  // Remove any query strings...they screw up the action later!
  $action = preg_replace('#(\?.*)?$#', '', $form_state['build_info']['args'][0]->webform['action']);
  if (strpos($form_id, 'webform_client_form_') === 0 && isset($form_state['webform_entity']) && $form_state['webform_entity']['bundle'] == 'robo_calls') {
    // Load the taxonomy term.
    $term = taxonomy_term_load(arg(2));

    // Try and load your profile information -- first name and cell
    $profile = profile2_load_by_user($user, 'main');
    $first_name = $mobile = '';
    if (isset($profile->field_user_first_name[LANGUAGE_NONE][0]['value'])) {
      $first_name = $profile->field_user_first_name[LANGUAGE_NONE][0]['value'];
    }
    if (isset($profile->field_user_mobile[LANGUAGE_NONE][0]['value'])) {
      $mobile = $profile->field_user_mobile[LANGUAGE_NONE][0]['value'];
    }

    // Load the form information.
    $u = &$form['submitted'];

    // Placeholder and theoretical population of my name
    $u['field_celeb_your_name'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('* My Name');
    if (!empty($first_name)) {
      $u['field_celeb_your_name'][LANGUAGE_NONE][0]['value']['#default_value'] = $first_name;
    }

#    $u['field_celeb_your_name']['#access'] = FALSE;

    // Placeholder and theoretical population of my number
    $u['field_celeb_your_phone'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('* My Number');
    if (!empty($mobile)) {
      $u['field_celeb_your_phone'][LANGUAGE_NONE][0]['value']['#default_value'] = $mobile;
    }

    if (user_is_logged_in()) {
      $u['field_celeb_your_password']['#access'] = FALSE;
      if (!empty($first_name)) {
        $u['field_celeb_your_name']['#access'] = FALSE;
      }
      if (!empty($mobile)) {
        $u['field_celeb_your_phone']['#access'] = FALSE;
      }
    }

    // Placeholder for my password
    $u['field_celeb_your_password'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('* My Password');

    // Set the celebrity chooser as the term ID
    $u['field_celebrity_chooser'][LANGUAGE_NONE]['#default_value'][] = $term->tid;

    // Set the mobile commons ID
    $u['field_mobile_commons_id'][LANGUAGE_NONE][0]['value']['#default_value'] = $term->field_call_mobile_commons_id[LANGUAGE_NONE][0]['value'];

    // Set placeholder for all friend mobile fields
    $friend_fields = array(
      'field_celeb_friend_phone',
      'field_celeb_friend_phone_2',
      'field_celeb_friend_phone_3',
      'field_celeb_friend_phone_4',
      'field_celeb_friend_phone_5',
      'field_celeb_friend_phone_6',
    );
    foreach ($friend_fields AS $field) {
      $u['your_friends_info'][$field][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('Friend\'s Number');
    }

    $form['more_stuff'] = array(
      '#markup' => '<a href="#" class="add-more-friends">Send to more friends</a>',
      '#weight' => 25,
    );

    drupal_add_css(drupal_get_path('module', 'robocalls') . '/css/robocalls_celeb.css', array(
      'group' => CSS_THEME,
      'weight' => 9999
    ));

    $form['actions']['submit']['#value'] = t('Send The Call!');
    $form['#validate'][] = 'robocalls_celeb_form_validation';
    $form['#submit'][] = 'robocalls_celeb_form_submission';
  }
  else {
    if ($action == '/robo-calls/homepage-webform') {
      $u =& $form['submitted'];

      $me = dosomething_api_user_fetch_data(array(
        'profile' => array(
          'field_user_first_name' => 'name',
          'field_user_mobile' => 'mobile'
        ),
      ));

      $u['my_info']['my_name']['#attributes']['placeholder'] = t('* My Name');
      if (!empty($me['name'])) {
        $u['my_info']['my_name']['#default_value'] = $me['name'];
      }

      // Placeholder and theoretical population of my number
      $u['my_info']['my_number']['#attributes']['placeholder'] = t('* My Number');
      if (!empty($me['mobile'])) {
        $u['my_info']['my_number']['#default_value'] = $me['mobile'];
      }

      $u['my_info']['my_password']['#attributes']['placeholder'] = t('My Password');

      if (user_is_logged_in()) {
        $u['my_info']['my_password']['#access'] = FALSE;
        $i = 0;
        if ($me['name']) {
          $u['my_info']['my_name']['#access'] = FALSE;
          $i++;
        }
        if ($me['mobile']) {
          $u['my_info']['my_number']['#access'] = FALSE;
          $i++;
        }

        if ($i == 2) {
          $u['my_info']['#access'] = false;
        }
      }

      // Get celebrities and populate the select box.
      $celebs = robocalls_get_celebrities();

      $settings = array(
        'celebs' => $celebs
      );
      drupal_add_js(array('calloffame' => $settings), 'setting');

      $u['friends_info']['primary_friend']['select_call']['#options'] += $celebs;

      // Make sure the password field is a password field.
      $u['my_info']['my_password']['#type'] = 'password';


      $form['more_stuff'] = array(
        '#markup' => '<a href="#" class="add-more-friends-front">Send to more friends</a>',
        '#weight' => 25,
      );

      // Change the "submit" button text to "Send the call!"
      $form['actions']['submit']['#value'] = t('Send The Call!');
      $form['#submit'][] = 'robocalls_homepage_form_submission';
    }
    else if (request_uri() == '/calloffame/walkthrough') {
      $u =& $form['submitted'];
      $u['friends_number']['#attributes']['placeholder'] = t("Friend's Number");

      $u['page_3']['#access'] = false;
      $u['my_number']['#access'] = false;
      global $user;
      $p = profile2_load_by_user($user, 'main');
      $form_state['input']['my_number'] = '610-368-3195';
      if ($p->field_user_mobile[LANGUAGE_NONE][0]['value']) {
        $form_state['input']['my_number'] = $p->field_user_mobile[LANGUAGE_NONE][0]['value'];
        $form_state['values']['my_number'] = $p->field_user_mobile[LANGUAGE_NONE][0]['value'];
        $u['my_number']['#default_value'] = $p->field_user_mobile[LANGUAGE_NONE][0]['value'];
      }

      $form['#submit'][] = 'robocalls_blah';
    }
  }
}

function robocalls_celeb_form_validation($form, &$form_state) {
  require_once DRUPAL_ROOT . '/includes/password.inc';

  if ($account = dosomething_general_find_user_by_cell($form_state['values']['submitted']['field_celeb_your_phone'][LANGUAGE_NONE][0]['value'])) {
    if (!user_check_password($form_state['values']['submitted']['field_celeb_your_password'][LANGUAGE_NONE][0]['value'], $account)) {
      form_set_error('password', t('That is not the correct password for this account.'));
      $error++;
    }
  }

  if ($error > 0) {
    drupal_goto($_SERVER['HTTP_REFERER']);
  }
  else {
    if (!user_is_logged_in()) {
      $v = $form_state['values']['submitted'];
      $your_cell = $v['field_celeb_your_phone'][LANGUAGE_NONE][0]['value'];
      $your_name = $v['field_celeb_your_name'][LANGUAGE_NONE][0]['value'];
      $your_password = $v['field_celeb_your_password'][LANGUAGE_NONE][0]['value'];

      robocalls_create_or_log_in_user(array('name' => $your_name, 'cell' => $your_cell, 'password' => $your_password));
    }
  }
}

function robocalls_create_or_log_in_user($info = array('name' => '', 'cell' => '', 'password' => '')) {
  if (!user_is_logged_in()) {
    $your_cell = $info['cell'];
    $your_name = $info['name'];
    $your_password = $info['password'];

    $account = dosomething_api_user_log_in($your_cell);

    if (empty($account)) {
      $account = dosomething_api_user_create(array(
        'name' => $your_name,
        'mobile' => $your_cell,
        'password' => $your_password
      ));

      if (!empty($account)) {
        dosomething_api_user_log_in($your_cell);
      }
    }
  }
}

/**
 *  Implements hook_webform_select_options_info()
 */
function robocalls_webform_select_options_info() {
  return array(
    'calls' => array(
      'title' => t('Project Prank Calls'),
      'options callback' => 'robocalls_get_celebrities',
    ),
  );
}


function robocalls_celeb_form_submission($form, &$form_state) {
  $s = $form_state['input']['submitted'];

  $friend_fields = array(
    'field_celeb_friend_phone',
    'field_celeb_friend_phone_2',
    'field_celeb_friend_phone_3',
    'field_celeb_friend_phone_4',
    'field_celeb_friend_phone_5',
    'field_celeb_friend_phone_6',
  );

  $friends = array();
  // Add all friend fields to the friends array
  foreach ($friend_fields AS $field) {
    $friends[] = $form_state['input']['submitted']['your_friends_info'][$field][LANGUAGE_NONE][0]['value'];
  }

  // Add any additional friend fields, if applicable.
  if (!empty($form_state['input']['submitted']['additional_friends']) && is_array($form_state['input']['submitted']['additional_friends'])) {
    $friends += $form_state['input']['submitted']['additional_friends'];
  }

  // Strip any non-numeric characters to ensure we only get unique phone numbers.
  array_walk($friends, function(&$val, $key) {
    $val = preg_replace('#[^0-9]#', '', $val);
  });

  // Get only unique phone numbers.
  $friends = array_unique($friends);

  // Send the call(s)!
  $call = dosomething_general_telapi_request('718-578-7681', $friends, 'blah');

  // Redirect back home, with a GET variable with the call information.
  if (!empty($call)) {
    drupal_goto($_SERVER['HTTP_REFERER'] . '?c=' . base64_encode(serialize($call)));
  }
}

function robocalls_homepage_form_submission($form, &$form_state) {
  $my = array(
    'name' => $form_state['input']['submitted']['my_info']['my_name'],
    'cell' => $form_state['input']['submitted']['my_info']['my_name'],
    'pass' => $form_state['input']['submitted']['my_info']['my_name'],
  );

  $f = $form_state['input']['submitted']['friends_info']['primary_friend'];
  $friends = array(
    $f['friends_number'] => $f['select_call'],
  );

  foreach ($f['more_calls'] AS $key => $call) {
    if ($f['more_friends'][$key]) {
      if (!$friends[$f['more_friends'][$key]]) {
        $friends[$f['more_friends'][$key]] = $call;
      }
    }
  }

  echo '<pre>', print_r($friends), '</pre>'; exit;
}
