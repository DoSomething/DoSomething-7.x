<?php

require_once 'dosomething_social_scholars.features.inc';

define('SHARE_A_STAT_NUM_CELLS', 5);
define('SHARE_A_STAT_USER_TXT', 117381);
define('SHARE_A_STAT_FRIEND_TXT', 117391);
define('SAS_AJAX_STATE', true); // user_is_logged_in()

/**
 * Implements hook_ctools_plugin_directory()
 */
function dosomething_social_scholars_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 *  Implements hook_menu()
 */
function dosomething_social_scholars_menu() {
  $items = array();

  $items['sas-response/%'] = array(
    'page callback' => 'dosomething_social_scholars_mms_response',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  return $items;
}

function dosomething_social_scholars_mms_response($nid) {
  global $user;
  if (!isset($_REQUEST['mms_image_url'])) {
    return;
  }

  $picture = check_plain($_REQUEST['mms_image_url']);

  // Build report back submission and submit
  $submission = new stdClass;
  $submission->bundle = 'social_scholarship';
  $submission->nid = $nid;
  $submission->data = array();
  $submission->uid = $user->uid;
  $submission->submitted = REQUEST_TIME;
  $submission->remote_addr = ip_address();
  $submission->is_draft = FALSE;
  $submission->sid = NULL;

  // Save user responses to 
  $wrapper = entity_metadata_wrapper('webform_submission_entity', $submission);

  // Download and save image
  if (!empty($picture)) {
    $f_name = 'public://' . basename($picture);
    $attach_contents = file_get_contents($picture);
    $attach_data = file_save_data($attach_contents, $f_name);
    $attach_array = get_object_vars($attach_data);
    $wrapper->value()->field_share_your_own_image[LANGUAGE_NONE][] = $attach_array;
  }

  $wrapper->save();

  dosomething_general_mobile_commons_response(t('Generic message of thanks for submitting a file.'));
  exit;
}

function dosomething_social_scholars_page_alter(&$page) {
  $uri = request_path();
  if (preg_match('#^sas-landing\/[0-9]+$#', $uri)) {
    drupal_add_js(drupal_get_path('module', 'dosomething_social_scholars') . '/js/dosomething_social_scholars_landing.js');
    drupal_add_css(drupal_get_path('module', 'dosomething_social_scholars') . '/css/dosomething_social_scholars_landing.css');
  }
}

/**
 *  Implements hook_form_alter()
 */
function dosomething_social_scholars_form_alter(&$form, &$form_state, $form_id) {
  $node = menu_get_object();
  $uri = request_uri();
  $sas_fid = variable_get('sas_webform_id', 'webform_client_form_724211');

  // As long as we're looking at a social scholarship, and it's not a node/ path (e.g. we're editing one)...
  if ((isset($node->type) && $node->type == 'social_scholarship') && !preg_match('#^\/node\/[0-9]+#', $uri) && $form_id == $sas_fid) {
    drupal_add_css(drupal_get_path('module', 'dosomething_social_scholars') . '/css/dosomething_social_scholars_form.css', array(
      'group' => CSS_THEME,
      'weight' => 1000,
    ));

    $campaign_nid = $node->field_linked_campaign[LANGUAGE_NONE][0]['nid'];
    $scheme_id = $node->field_color_scheme[LANGUAGE_NONE][0]['value'];
    require_once drupal_get_path('module', 'dosomething_social_scholars') . '/style_config.php';

    if (!empty($campaign_styles[$campaign_nid]) || !empty($scheme_styles[$scheme_id])) {
      if (isset($campaign_nid)) {
        $s = $campaign_styles[$campaign_nid]['longform'];
      }
      else if (isset($scheme_id)) {
        $s = $scheme_styles[$scheme_id]['longform'];
      }

      $css = '
        #sas-form .webform-client-form {
          background: ' . $s['background'] . ' !important;
          color: ' . $s['font_color'] . ' !important;
        }

        #sas-form .webform-client-form h1,
        #sas-form .webform-client-form label {
          color: ' . $s['font_color'] . ' !important;
        }

        #sas-form .webform-client-form .quote-highlight p {
          background: ' . $s['tip'] . ' !important;
          color: ' . $s['tip_color'] . ' !important;
        }
      ';
      drupal_add_css($css, array(
        'type' => 'inline',
        'group' => CSS_THEME,
        'weight' => 10000,
      ));
    }

    drupal_add_js(drupal_get_path('module', 'dosomething_social_scholars') . '/js/dosomething_social_scholars.js');

    $f = &$form['submitted'];

    $fields = array(
      'referall_your_info' => array(
        'referral_first_name' => 'Your Name:',
        'referral_phone_number' => 'Your cell #:',
      ),
      'referral_friend_info' => array(
        'referral_friend_cell_1' => "Friend's Cell #:",
        'referral_friend_cell_2' => "Friend's Cell #:",
        'referral_friend_cell_3' => "Friend's Cell #:",
        'referral_friend_cell_4' => "Friend's Cell #:",
        'referral_friend_cell_5' => "Friend's Cell #:",
        'referral_friend_cell_6' => "Friend's Cell #:",
      ),
    );

    foreach ($fields AS $group => $fs) {
      foreach ($fs AS $field => $placeholder) {
        $f[$group][$field]['#attributes']['placeholder'] = $placeholder;
      }
    }

    $f['header']['#markup'] = theme('sas-header', array(
      'scholarship_copy' => '$2000 Scholarship',
      'stat_tip' => check_plain($node->field_tip_to_show_on_form[LANGUAGE_NONE][0]['value']),
    ));

    $f['divider'] = array(
      '#markup' => theme('sas-divider'),
      '#weight' => 5.5,
    );

    $f['footer'] = array(
      '#markup' => theme('sas-footer', array(
        'rules_uri' => file_create_url($node->field_official_rules_document[LANGUAGE_NONE][0]['uri']),
      )),
      '#weight' => 100,
    );

    $f['alpha_opt_in']['#default_value'] = $node->field_alphas_campaign[LANGUAGE_NONE][0]['value'];
    $f['beta_opt_in']['#default_value'] = $node->field_betas_campaign[LANGUAGE_NONE][0]['value'];
    $f['sas_nid']['#default_value'] = $node->nid;

    #$form['actions']['submit']['#value'] = t('Submit');
    $form['#validate'][] = 'dosomething_social_scholars_validate_form';
    $form['#submit'][] = 'dosomething_social_scholars_submit_form';

    /*
     * NIXED 2/26/13: Users will be able to sign up when they join a campaign.
     * so this popup is pointless.
    if (!SAS_AJAX_STATE) {
      $form['actions']['submit']['#ajax'] = array(
        'callback' => 'dosomething_social_scholars_ajax',
      );
    }*/
  }
}

/**
 *  Validates share-a-stat forms
 */
function dosomething_social_scholars_validate_form($form, &$form_state) {
  $error = 0;
  $s = $form_state['input']['submitted'];

  $you = $s['referall_your_info'];
  $them = $s['referral_friend_info'];


  if (trim($you['referral_first_name']) == '' && trim($you['field_referral_your_name'][LANGUAGE_NONE][0]['value']) == '') {
    form_set_error('submitted[referall_your_info][referral_first_name]', t("You must provide a valid name."));
    $error++;
  }

  if (!dosomething_general_valid_cell($you['referral_phone_number']) && !dosomething_general_valid_cell($you['field_referral_your_cell'][LANGUAGE_NONE][0]['value'])) {
    form_set_error('submitted[referall_your_info][referral_phone_number', t("Your phone number must be a valid phone number."));
    $error++;
  }

  if (!dosomething_general_valid_cell($them['referral_friend_cell_1']) && !dosomething_general_valid_cell($them['field_cell_friend1'][LANGUAGE_NONE][0]['value'])) {
    form_set_error('submitted[referral_friend_info][referral_friend_cell_1', t("You must provide at least one valid cell phone number."));
    $error++;
  }

  if ($error > 0 && SAS_AJAX_STATE) {
    drupal_goto($_SERVER['HTTP_REFERER']);
  }
}

/**
 *  Ajax processing for share-a-stat
 */
function dosomething_social_scholars_ajax($form, &$form_state) {
  $commands = array();
  $errors = form_get_errors();

  if (!empty($errors)) {
    // Scrolls up the page to show the error messages.
    $loop_back = '<script type="text/javascript"> jQuery("html, body").animate({ scrollTop: jQuery(".error").offset().top }, "slow"); </script>';
    $commands[] = ajax_command_before('#page-title', $loop_back);

    $error_list = '';
    foreach ($errors AS $key => $error) {
      $error_list .= '<li>' . $error . '</li>';
    }

    // "Fake" error template to show form errors through javascript
    $fake_error_template = '<div class="messages error"> <h2 class="element-invisible">Error message</h2> <ul>' . $error_list . '</ul></div>';
    $commands[] = ajax_command_before('#page-title', $fake_error_template);

    // Scrolls up the page to show the error messages.
    $loop_back = '<script type="text/javascript"> jQuery("html, body").animate({ scrollTop: jQuery(".error").offset().top }, "slow"); </script>';
    $commands[] = ajax_command_before('#page-title', $loop_back);
  }
  else {
    // Strip any leading slashes...
    $nid = intval($form_state['values']['details']['nid']);
    $commands[] = ajax_command_invoke('#dosomething-login-register-popup-form', 'dsSocialScholarsSubmit', array('redirect-with-message%3Ftype%3Dsocial_scholarship%26nid%3D' . $nid));
  }

  return array(
    '#type' => 'ajax',
    '#commands' => $commands
  );
}

/**
 *  Submission details for share-a-stat forms.
 */
function dosomething_social_scholars_submit_form($form, &$form_state) {
  $s = $form_state['input']['submitted'];

  $you = $s['referall_your_info'];
  $them = $s['referral_friend_info'];

  $your_number = $you['referral_phone_number'];

  if (user_is_logged_in()) {
    global $user;
    $profile = profile2_load_by_user($user, 'main');
    if (!$profile->field_user_mobile[LANGUAGE_NONE][0]['value'] || $profile->field_user_mobile[LANGUAGE_NONE][0]['value'] !== $your_number) {
       $profile->field_user_mobile[LANGUAGE_NONE][0]['value'] = $your_number;
       $profile->save();
    }
  }

  // Get the alphas and betas campaign.
  $alphas_campaign = $s['alpha_opt_in'];
  $betas_campaign = $s['beta_opt_in'];

  // Load the SaS node to get information later.
  $nid = intval($s['sas_nid']);
  $node = node_load($nid);

  dosomething_general_mobile_commons_subscribe_with_friends($your_number, $alphas_campaign, $them, $betas_campaign);

  // Set the message to the redirect message found on the form.
  #drupal_set_message(t($node->field_redirect_message[LANGUAGE_NONE][0]['value']));

  if (SAS_AJAX_STATE) {
    // If we set up the redirect path in the form, use that.
    if (!empty($node->field_redirect_to_path[LANGUAGE_NONE][0]['value'])) {
      drupal_set_message(t($node->field_redirect_message[LANGUAGE_NONE][0]['value']));
      $_GET['destination'] = $node->field_redirect_to_path[LANGUAGE_NONE][0]['value'];
    }
    // Otherwise, redirect to the default "show the images" page.
    else {
      $_GET['destination'] = 'sas-landing/' . $node->nid;
    }

    // Redirect.
    drupal_goto();
  }
}

/**
 *  Implements hook_theme()
 */
function dosomething_social_scholars_theme($existing, $type, $theme, $path) {
  return array(
    // Form header
    'sas-header' => array(
      'path' => $path . '/templates',
      'template' => 'sas-header',
      'variables' => array(
        'scholarship_copy' => NULL,
        'stat_tip' => NULL,
      ),
    ),
    // Form divider
    'sas-divider' => array(
      'path' => $path . '/templates',
      'template' => 'sas-divider',
      'variables' => array(),
    ),
    // Form footer
    'sas-footer' => array(
      'path' => $path . '/templates',
      'template' => 'sas-footer',
      'variables' => array(
        'rules_uri' => NULL,
      )
    ),
    // Campaign short form
    'sas-campaign-short-form' => array(
      'path' => $path . '/templates',
      'template' => 'sas-campaign-short-form',
      'variables' => array(
        'alias' => NULL,
        'nid' => NULL
      )
    ),
  );
}