<?php
/**
 * @file
 * Code for the dosomething_campaign_contact_form feature.
 */

include_once('dosomething_campaign_contact_form.features.inc');

/**
 * Implements hook_form_alter().
 */
function dosomething_campaign_contact_form_form_alter(&$form, &$form_state, $form_id) {
  // Note that dosomething_grant_application,
  // dosomething_scholarship_application, dosomething_campaign_report_back, and
  // dosomething_campaign_sign_up all prepopulate data from the user's user and
  // main profile object and update those objects with newer data.  The code is
  // not *quite* common enough to completely generalize, so there is some
  // duplication.  If you need to make a change here you likely need to make it
  // in the other places as well.

  // Make sure we're dealing with the right form.
  if (strpos($form_id, 'webform_client_form_') === 0 && isset($form_state['webform_entity']) && $form_state['webform_entity']['bundle'] == 'campaign_contact_form') {
    global $user;

    ctools_add_js('ajax-responder');

    // Get a shortcut to our part of the form.
    $entity_form = &$form['submitted'];

    $form['#suffix'] = '<div id="campaign-opt-in">Click sign up to join this campaign and receive weekly updates. <a href="#" id="opt-in-help">?</a></div>';
    $form['#suffix'].= '<div id="campaign-opt-in-help">Enter your phone number to get weekly updates from DoSomething.org, including campaign news and chances to win prizes and scholarships. (Message and data rates may apply. Text <strong>STOP</strong> to opt-out. Email <a href="mailto:help@dosomething.org">help@dosomething.org</a> or text <strong>HELP</strong> for help.)</div>';

    $form['#attached']['library'][] = array('system', 'dialog');
    $form['#attached']['js'][] = array(
      'type' => 'file',
      'data' => drupal_get_path('module', 'dosomething_campaign_contact_form') . '/ctia.js',
    );

    $form['actions']['submit']['#value'] = 'SIGN UP';
    
    // Replace labels with HTML5 Placeholder text.
    $make_placeholder = array('field_webform_mobile' => 'value', 'field_webform_email' => 'email');
    foreach ($make_placeholder as $field_name => $value_field) {
      $entity_form[$field_name][LANGUAGE_NONE][0][$value_field]['#attributes']['placeholder'] = $entity_form[$field_name][LANGUAGE_NONE][0][$value_field]['#title'];
      unset($entity_form[$field_name][LANGUAGE_NONE][0][$value_field]['#title']);
      if ($entity_form[$field_name][LANGUAGE_NONE]['#required']) {
        $entity_form[$field_name][LANGUAGE_NONE][0][$value_field]['#attributes']['placeholder'] .= ' (required)';
      }
    }

    // Take no action if this user is not authenticated.
    if ($user->uid != 0) {
      $node = $form['#node'];


      $profile = profile2_load_by_user($user, 'main');
      if ($profile) {
        // If we have a profile and don't have a value for the mobile number, provide the one from the profile as a default.
        $mobile = field_get_items('profile2', $profile, 'field_user_mobile');
        if (isset($mobile[0]['value']) && $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] == '') {
          $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] = $mobile[0]['value'];
        }
      }

      // If this email isn't actually a magic mobile number, prepopulate the form with it.
      if (substr($user->mail, -7) != '@mobile' && $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] == '') {
        $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] = $user->mail;
      }

      $form['#validate'][] = 'dosomething_general_webform_email_and_mail_validate';
      $form['#submit'][] = 'dosomething_general_webform_email_and_mail_submit';
      $form['#submit'][] = 'dosomething_general_webform_email_and_mobile_subscribe';
    }
    else {
      $form['actions']['submit']['#ajax'] = array(
        'callback' => 'dosomething_campaign_contact_form_login_form_popup_form',
      );
    }
  }
}

function dosomething_campaign_contact_form_login_form_popup_form($form, &$form_state) {
  ctools_include('ajax');

  $email = $form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email'];
  $mobile = $form_state['values']['field_webform_mobile'][LANGUAGE_NONE][0]['value'];

  if (empty($email)) {
    return array(
      '#type' => 'ajax',
      '#commands' => array(
        ajax_command_invoke('#edit-submitted-field-webform-email-und-0-email', 'addClass', array('error')),
      ),
    );
  }
  if (!empty($email) && dosomething_login_find_user_by_email($email)) {
    $valid = $email;
  }
  else if (!empty($mobile) && dosomething_general_find_user_by_cell($mobile)) {
    $valid = $mobile;
  }
  if (isset($valid)) {
    $new_form = drupal_get_form('user_login');
    $new_form['name']['#value'] = $valid;
    $redirect = drupal_encode_path($form_state['redirect'][0]);
    $new_form['#action'] = "/user/login?destination=$redirect";
    $return = <<<EOM
  <div id="password-prompt">
  <h1>Hey! It looks like you already have an account.</h1>
EOM;
    $return.= $name;
    $return.= drupal_render($new_form).'</div>';
    $return.= print_r($form_state['redirect'], true);

    // There's no elegant way to do this that I could see, because the parameter array
    // gets converted to a string, and passed as a string instead of a JS object to
    // a function call. I could write my own JS to handle this, but that's no fun :)
    //
    // This may hic-cup on older browsers.
    $actions = array(
      ajax_command_append('body', $return),
      ajax_command_invoke('#password-prompt', 'dialog'),
      ajax_command_invoke('#password-prompt', 'dialog', array('close')),
      ajax_command_invoke('#password-prompt', 'dialog', array('option', 'modal', true)),
      ajax_command_invoke('#password-prompt', 'dialog', array('option', 'resizable', false)),
      ajax_command_invoke('#password-prompt', 'dialog', array('open')),
    );

    return array(
      '#type' => 'ajax',
      '#commands' => $actions,
    );
  }
  else {
    $options = $form_state['redirect'][1];
    $options['absolute'] = true;
    $url = url($form_state['redirect'][0], $options);
    return array(
      '#type' => 'ajax',
      '#commands' => array(ctools_ajax_command_redirect($url)),
    );
  }
}

function dosomething_campaign_contact_form_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['dosomething_campaign_contact_form'])) {
    $group = $implementations['dosomething_campaign_contact_form'];
    unset($implementations['dosomething_campaign_contact_form']);
    $implementations['dosomething_campaign_contact_form'] = $group;
  }
}
