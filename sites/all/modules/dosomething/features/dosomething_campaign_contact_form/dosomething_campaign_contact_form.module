<?php
/**
 * @file
 * Code for the dosomething_campaign_contact_form feature.
 */

include_once('dosomething_campaign_contact_form.features.inc');

/**
 * Implements hook_form_alter().
 */
function dosomething_campaign_contact_form_form_alter(&$form, &$form_state, $form_id) {
  // Note that dosomething_grant_application,
  // dosomething_scholarship_application, dosomething_campaign_report_back, and
  // dosomething_campaign_sign_up all prepopulate data from the user's user and
  // main profile object and update those objects with newer data.  The code is
  // not *quite* common enough to completely generalize, so there is some
  // duplication.  If you need to make a change here you likely need to make it
  // in the other places as well.

  // Make sure we're dealing with the right form.
  if (strpos($form_id, 'webform_client_form_') === 0 && isset($form_state['webform_entity']) && $form_state['webform_entity']['bundle'] == 'campaign_contact_form') {
    global $user;

    ctools_add_js('ajax-responder');

    // Take no action if this user is not authenticated.
    if ($user->uid != 0) {
      $node = $form['#node'];

      // Get a shortcut to our part of the form.
      $entity_form = &$form['submitted']['webform_entity_form'];

      $profile = profile2_load_by_user($user, 'main');
      if ($profile) {
        // If we have a profile and don't have a value for the mobile number, provide the one from the profile as a default.
        $mobile = field_get_items('profile2', $profile, 'field_user_mobile');
        if (isset($mobile[0]['value']) && $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] == '') {
          $entity_form['field_webform_mobile'][LANGUAGE_NONE][0]['value']['#default_value'] = $mobile[0]['value'];
        }
      }

      // If this email isn't actually a magic mobile number, prepopulate the form with it.
      if (substr($user->mail, -7) != '@mobile' && $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] == '') {
        $entity_form['field_webform_email'][LANGUAGE_NONE][0]['email']['#default_value'] = $user->mail;
      }

      $form['#validate'][] = 'dosomething_general_webform_email_and_mail_validate';
      $form['#submit'][] = 'dosomething_general_webform_email_and_mail_submit';
      $form['#submit'][] = 'dosomething_general_webform_email_and_mobile_subscribe';
    }
  }
  $form['actions']['submit']['#ajax'] = array(
    'callback' => 'dosomething_campaign_contact_form_test',
  );
}

function dosomething_campaign_contact_form_form($form_state, $email, $mobile) {
  $form = array(
    'email' => array(
      '#type' => 'hidden',
      '#value' => $email,
    ),
    'mobile' => array(
      '#type' => 'hidden',
      '#value' => $mobile,
    ),
    'password' => array(
      '#type' => 'password',
      '#title' => 'Password',
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Log in'),
    ),
  );

  return $form;
}

function dosomething_campaign_contact_form_test(&$form, &$form_state) {
  ctools_include('ajax');

  $email = $form_state['values']['field_webform_email'][LANGUAGE_NONE][0]['email'];
  $mobile = $form_state['values']['field_webform_mobile'][LANGUAGE_NONE][0]['value'];
  $new_form = drupal_get_form('dosomething_campaign_contact_form_form', $email, $mobile);
  $return = <<<EOM
<div id="password-prompt">
<h1>Hey! It looks like you already have an account.</h1>
<p>Log in by typing your password below</p>
EOM;
  $return.= drupal_render($new_form).'</div>';

  // There's no elegant way to do this that I could see, because the parameter array
  // gets converted to a string, and passed as a string instead of a JS object to
  // a function call. I could write my own JS to handle this, but that's no fun :)
  //
  // This may hic-cup on older browsers.
  $actions = array(
    ajax_command_append('body', $return),
    ajax_command_invoke('#password-prompt', 'dialog'),
    ajax_command_invoke('#password-prompt', 'dialog', array('close')),
    ajax_command_invoke('#password-prompt', 'dialog', array('option', 'modal', true)),
    ajax_command_invoke('#password-prompt', 'dialog', array('option', 'resizable', false)),
    ajax_command_invoke('#password-prompt', 'dialog', array('open')),
  );

  return array(
    '#type' => 'ajax',
    '#commands' => $actions,
  );
}

function dosomething_campaign_contact_form_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['dosomething_campaign_contact_form'])) {
    $group = $implementations['dosomething_campaign_contact_form'];
    unset($implementations['dosomething_campaign_contact_form']);
    $implementations['dosomething_campaign_contact_form'] = $group;
  }
}
