<?php
/**
 * @file
 * Code for the DoSomething Project feature.
 */

include_once 'dosomething_project.features.inc';

/**
 * Implements hook_theme().
 */
function dosomething_project_theme() {
	// Defined alphabetically to promote sanity.
	 return array(
    'project_section_action_items' => array(
      'template' => 'project_section_action_items',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_cta' => array(
      'template' => 'project_section_cta',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_faq' => array(
      'template' => 'project_section_faq',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_gallery' => array(
      'template' => 'project_section_gallery',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_header' => array(
      'template' => 'project_section_header',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_prizes' => array(
      'template' => 'project_section_prizes',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_project_info' => array(
      'template' => 'project_section_project_info',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_project_profiles' => array(
      'template' => 'project_section_project_profiles',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_sms_example' => array(
      'template' => 'project_section_sms_example',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_sms_referral' => array(
      'template' => 'project_section_sms_referral',
      'arguments' => array(
      	'node' => NULL, 
      ),
    ),
    'project_section_sponsors' => array(
      'template' => 'project_section_sponsors',
      'arguments' => array(
        'node' => NULL, 
      ),
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function dosomething_project_node_view($node, $view_mode, $langcode) {
  //@todo: Add more checks to see whether or not SMS Referral Form is needed on this node.  (e.g. Check for SMS Referral fields)
  if ($node->type == 'project' && $view_mode == 'full' && module_exists('dosomething_subscribe_mobilecommons')) {
    $node->content['sms_referral_form'] = drupal_get_form('dosomething_subscribe_mobilecommons_referral_form', $node);
  }
}

/**
 * Return values of a given field collection in a given node.
 *
 * This function is only useful for field collections whose fields follow a specific naming convention.
 *
 * @param Object $node
 *   Loaded node for which to return values from.
 * @param string $field_collection_name
 *   The machine name of the field collection field to return values from.
* @param string $child_field_prefix
 *   The prefix in machine name of the child fields, 
 *   Only works for fields: field_CHILDPREFIX_image, field_CHILDPREFIX_title, field_CHILDPREFIX_copy.
 *
 * @return array
 *   A multi-dimensional array for each value/row of the field collection.
 */
function dosomething_project_get_field_collection_values($node, $field_collection_name, $child_field_prefix) {
  $values = array();
  // Define field_collecitons with no images:
  $no_image_fc = array('field_project_info_items', 'field_faq');
  $field_collection_fields = field_get_items('node', $node, $field_collection_name);
  // Extract the field collection item ids:
  $ids = array();
  foreach ($field_collection_fields as $fc_field) {
    $ids[] = $fc_field['value'];
  }
  if (!empty($ids)) {
    $items = field_collection_item_load_multiple($ids);
    $i = 0;
    foreach($items as $item) {
      // If this field collection doesn't have an image field, don't query for an image.
    	if (!in_array($field_collection_name, $no_image_fc)) {
        // Get field_CHILDPREFIX_image values.
  	    $image = field_get_items('field_collection_item', $item, 'field_' . $child_field_prefix . '_image');
  	    $values[$i]['image']['uri'] = file_create_url($image[0]['uri']);
  	    $values[$i]['image']['alt'] = $image[0]['alt'];
      }
      // Get field_CHILDPREFIX_title value.
      $title = field_get_items('field_collection_item', $item, 'field_' . $child_field_prefix . '_title');
      $values[$i]['title'] = $title[0]['safe_value'];
      // Get field_CHILDPREFIX_copy value.
      $copy = field_get_items('field_collection_item', $item, 'field_' . $child_field_prefix . '_copy');
      $values[$i]['copy'] = $copy[0]['safe_value'];
      $i++;
    }
  }
  return $values;
}

/**
 * Return the values of the Sponors field collection in a given node.
 *
 * The sponsors field collection doesn't use same fields as the others, so 
 * we can't use the general dosomething_project_get_field_collection_values() 
 * to grab them.
 *
 * @param Object $node
 *   Loaded node for which to return values from.
 *
 */
function dosomething_project_get_field_sponsors_values($node) {
  $values = array();
  $field_collection_fields = field_get_items('node', $node, 'field_sponsors');
  $ids = array();
  foreach ($field_collection_fields as $fc_field) {
    $ids[] = $fc_field['value'];
  }
  if (!empty($ids)) {
    $items = field_collection_item_load_multiple($ids);
    $i = 0;
    foreach($items as $item) {
      $image = field_get_items('field_collection_item', $item, 'field_sponsor_logo');
      $values[$i]['image']['uri'] = file_create_url($image[0]['uri']);
      $values[$i]['image']['alt'] = $image[0]['alt'];
      $link = field_get_items('field_collection_item', $item, 'field_sponsor_url');
      $values[$i]['url'] = $link[0]['value'];
      $i++;
    }
  }
  return $values;
}