<?php


class DoSomethingCampaignTFJTestCase extends WebTestSuite {
  public static function getInfo() {
    return array(
      'name' => 'DoSomething Campaign Teens For Jeans Tests',
      'description' => 'Tests database-driven Teens For Jeans functions.',
      'group' => 'DoSomething',
    );
  }

  public function setUp() {
    parent::setUp('dosomething_campaign', 'dosomething_signups', 'webform');
    $this->auth_user = $this->factory->create('User');
    $this->nid = variable_get('tfj_campaign_nid', 731115);
    $node = node_load($this->nid);
    // In case node isn't published yet, publish it to test live functionality.
    if (!$node->status) {
      $node->status = 1;
    }
    node_save($node);
    $this->node = $node;
  }

  public function testAnonPitchPage() {
    $this->drupalGet('node/' . $this->nid);
    $this->assertText(t('Do This'), 'The text "Do This" appears on page as anonymous user.');
    $this->clickLink('Do This');
    $this->assertText('Email, Username or Cell Number', 'The text "email, username or cell number" appears on the page.');
    $this->assertText('Forgot your password?', 'The text "Forgot your password?" appears on the page.');
  }

  public function testAuthPitchPage() {
    // Test logged in pitch page:
    $this->drupalLogin($this->auth_user);
    $this->drupalGet('node/' . $this->nid);
    $edit = array();
    // Click on the "Do This" form submit button.
    $this->drupalPost('node/' . $this->nid, $edit, 'Do This');
    // There should be no "Do This" link:
    $this->assertNoText(t('Do This'), 'The text "Do This" does not appear for the user after joining.');
    $signup = dosomething_signups_is_user_signed_up($this->auth_user->uid, $this->nid);
    $this->assertTrue($signup, 'The user is signed up for the campaign.');
  }

  /**
   *  Tests that expected form element id's are defined in TFJ Signup Data Form.
   *
   * @see dosomething_campaign_tfj_signup_data_form().
   */
  public function testTFJSignupDataForm() {
    $form = drupal_get_form('dosomething_campaign_tfj_signup_data_form');
    $this->assertTrue(isset($form['header']), "form['header'] is set.");
    $this->assertTrue(isset($form['school_state']), "form['school_state'] is set.");
    $this->assertTrue(isset($form['gsid']), "form['gsid'] is set.");
    $this->assertTrue(isset($form['school_not_found']), "form['school_not_found'] is set.");
    $this->assertTrue(isset($form['not_affiliated']), "form['not_affiliated'] is set.");
    $this->assertTrue(isset($form['address_header']), "form['address_header'] is set.");
    $this->assertTrue(isset($form['address_name']), "form['address_name'] is set.");
    $this->assertTrue(isset($form['address1']), "form['address1'] is set.");
    $this->assertTrue(isset($form['address2']), "form['address2'] is set.");
    $this->assertTrue(isset($form['address_city']), "form['address_city'] is set.");
    $this->assertTrue(isset($form['address_state']), "form['address_state'] is set.");
    $this->assertTrue(isset($form['address_zip']), "form['address_zip'] is set.");
    $this->assertTrue(isset($form['submit']), "form['submit'] is set.");
  }
}
