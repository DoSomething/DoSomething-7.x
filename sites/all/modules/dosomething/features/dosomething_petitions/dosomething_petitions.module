<?php
/**
 * @file
 * Code for the dosomething_petitions feature.
 */

include_once 'dosomething_petitions.features.inc';

define('PETITIONS_NUM_EMAILS', 5);
define('PETITIONS_INFUSIONSOFT', 1648);
define('PETITIONS_MCOMMONS', 117371);

/**
 * Implements hook_form_alter().
 */
function dosomething_petitions_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'webform_client_form_') === 0 && isset($form_state['webform_entity']) && $form_state['webform_entity']['bundle'] == 'petition') {
    global $user;
    if (!user_is_logged_in()) {
      $form['actions']['submit']['#ajax'] = array(
        'callback' => 'dosomething_petitions_register',
      );
    }

    $form['actions']['submit']['#value'] = 'SIGN THIS';
    $form['actions']['submit']['#attributes'] = array('class' => array('go-button'));

    $form['#submit'][] = 'dosomething_petitions_opt_in';
  }
}

/**
 * Submission callback for petition webforms
 */
function dosomething_petitions_opt_in($form, $form_state) {
  $sub = $form['#submission']->submitted;
  $val = $sub['field_webform_email_or_cell'][LANGUAGE_NONE][0]['value'];

  if (valid_email_address($val)) {
    dosomething_general_infusionsoft_subscribe($val, PETITIONS_INFUSIONSOFT);
  }
  else if (dosomething_general_valid_cell($val)) {
    dosomething_general_mobile_commons_subscribe($val, PETITIONS_MCOMMONS);
  }
}

/**
 * AJAX callback for unauthenticated user petition submission
 */
function dosomething_petitions_register($form, &$form_state) {
  return array(
    '#type' => 'ajax',
    '#commands' => array(
      ajax_command_invoke('#dosomething-login-register-popup-form', 'dsPetitionSubmit', array($form_state['redirect'][0])),
    ),
  );
}

/**
 * Make sure we do our hook_form_alter after webform_entity does
 */
function dosomething_petitions_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['dosomething_petitions'])) {
    $group = $implementations['dosomething_petitions'];
    unset($implementations['dosomething_petitions']);
    $implementations['dosomething_petitions'] = $group;
  }
}

/**
 * Implements hook_node_insert().
 */
function dosomething_petitions_node_insert($node) {
  if ($node->type == 'petition') {
    $node->webform['redirect_url'] = 'webform-post-submit-associate/%nid/%sid';
    webform_node_update($node);
  }
}

function dosomething_petitions_panels_pre_render($display) {
  if ($display->layout == 'petitions') {
    drupal_add_css(drupal_get_path('module', 'dosomething_petitions') . '/dosomething_petitions.css');
    drupal_add_js(drupal_get_path('module', 'dosomething_petitions') . '/dosomething_petitions.js', array('weight' => 500));
  }
}

/**
* Implementation of hook_ctools_plugin_directory().
*/
function dosomething_petitions_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Refer a friend via email form.
 */
function dosomething_petitions_email_form($form, &$form_state, $nid) {
  $form = array();

  for ($i = 0; $i < PETITIONS_NUM_EMAILS; $i++) {
    $form['email_'.$i] = array(
      '#type' => 'textfield',
      '#title' => 'Friend\'s email',
    );
  }

  $form['nid'] = array(
    '#type' => 'hidden',
    '#value' => $nid,
    '#default_value' => $nid,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Share This',
    '#attributes' => array(
      'class' => array('go-button'),
    ),
  );

  $form['#submit'][] = 'dosomething_petitions_email_form_submit';

  return $form;
}

/**
 * Petitions email form submit handler.
 */
function dosomething_petitions_email_form_submit($form, $form_state) {
  global $user, $language;
  $node = node_load($form_state['values']['nid']);
  $url = entity_uri('node', $node);
  $url = url($url['path'], array('absolute' => true));

  $params = array(
    'title' => $node->title,
    'account' => $user,
    'summary' => $node->field_petition_about[LANGUAGE_NONE][0]['summary'],
    'who' => $node->field_petition_target[LANGUAGE_NONE][0]['value'],
    'url' => $url,
  );

  for ($i = 0; $i < PETITIONS_NUM_EMAILS; $i++) {
    $email = $form_state['values']['email_'.$i];
    if (valid_email_address($email)) {
      drupal_mail('dosomething_petitions', 'petition_invite', $email, $language, $params);
    }
  }
  drupal_set_message(t('Great! We\'ll send them a link to this petition. Share with more friends below.'));
}

/**
 * Implements hook_mail().
 */
function dosomething_petitions_mail($key, &$message, $params) {
  switch ($key) {
    case 'petition_invite':
      $params['full_name'] = dosomething_login_get_user_full_name($params['account']);
      $message['subject'] = t('Petition to @title', array('@title' => $params['title']));
      $message['body'][] = theme('ds_petitions_invite', $params);
      break;
  }
}

/**
 * Implements hook_theme().
 */
function dosomething_petitions_theme($existing, $type, $theme, $path) {
  return array(
    'ds_petitions_invite' => array(
      'path' => $path . '/templates',
      'variables' => array(),
      'template' => 'ds-petitions-invite',
    ),
  );
}

