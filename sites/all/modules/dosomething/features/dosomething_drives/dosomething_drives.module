<?php
/**
 * @file
 * Code for the dosomething_drives feature.
 */

define('DS_DRIVE_GOAL_FIELD', 'drive_goal');

include_once 'dosomething_drives.features.inc';

/**
 * Implements hook_init().
 */
function dosomething_drives_init() {
  $node = menu_get_object();
  if (isset($node->nid) && $node->type == 'campaign') {
    if (isset($node->field_team_redirect) && $node->field_team_redirect[LANGUAGE_NONE][0]['value'] == 1 && !arg(2)) {
      if (!isset($_GET['skip_redirect']) && user_is_logged_in()) {
        $path = drupal_lookup_path('alias', 'node/'.$node->nid);
        $team = teams_get_my_teams_for_url($path);
        if (!empty($team)) {
          drupal_goto('team/'.$path.'/'.array_shift($team));
        }
      }
    }
  }
}

/**
* Implementation of hook_ctools_plugin_directory().
*/
function dosomething_drives_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

function dosomething_drives_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'webform_client_form_') !== 0 || empty($form_state['webform_entity']) || $form_state['webform_entity']['bundle'] != 'drive_form') {
    return;
  }

  if (isset($_GET['gid']) && is_numeric($_GET['gid'])) {
    $gid = $_GET['gid'];
    $entity_form = &$form['submitted'];
    $node = $form['#node'];

    $entity_form['group_audience']['#access'] = FALSE;
    $entity_form['group_audience'][LANGUAGE_NONE][0]['gid']['#default_value'] = $gid;

    $reference = og_load_entity_from_group($gid);
    if ($cid = dosomething_drives_get_drive_cid(node_load($reference->nid))) {
      $entity_form['field_'.DS_DRIVE_GOAL_FIELD][LANGUAGE_NONE][0]['value']['#default_value'] = $reference->data[$cid]['value'][0];
    }
    $entity_form['field_team_name'][LANGUAGE_NONE][0]['value']['#default_value'] = $reference->field_team_name[LANGUAGE_NONE][0]['value'];
  }
  $form['#submit'][] = 'dosomething_drives_drive_submit';
}

function dosomething_drives_drive_submit(&$form, &$form_state) {
  $submitted = $form_state['webform_entity']['submission']->submitted;
  $gid = $submitted['group_audience'][LANGUAGE_NONE][0]['gid'];
  $goal = $submitted['field_'.DS_DRIVE_GOAL_FIELD][LANGUAGE_NONE][0]['value'];
  $team_name = $submitted['field_team_name'][LANGUAGE_NONE][0]['value'];

  $reference = og_load_entity_from_group($gid);
  $reference_node = node_load($reference->nid);

  $save = false;
  
  if ($cid = dosomething_drives_get_drive_cid($reference_node)) {
  $webform_field = &$reference->data[$cid]['value'][0];
    if ($webform_field != $goal) {
      $webform_field = $goal;
      $save = TRUE;
    }
  }

  $old_name = &$reference->field_team_name[LANGUAGE_NONE][0]['value'];
  if ($old_name != $team_name) {
    $old_name = $team_name;
    $save = TRUE;
  }

  if ($save) {
    entity_save('webform_submission_entity', $reference);
  }
}

function dosomething_drives_get_drive_cid($node) {
  static $cid;

  if (!isset($cid)) {
    $cid = false;
    foreach ($node->webform['components'] as $component) {
      if ($component['form_key'] == DS_DRIVE_GOAL_FIELD) {
        $cid = $component['cid'];
      }
    }
  }

  return $cid;
}

function dosomething_drives_module_implements_alter(&$implementations, $hook) {
  // We can only disable our elements if we come after webform_entity, make sure we do.
  if ($hook == 'form_alter' && isset($implementations['dosomething_drives'])) {
    $group = $implementations['dosomething_drives'];
    unset($implementations['dosomething_drives']);
    $implementations['dosomething_drives'] = $group;
  }
}

/**
 * Implements hook_menu().
 */
function dosomething_drives_menu() {
  $items = array();

  $items['drive/join/%'] = array(
    'page callback' => 'dosomething_drives_join',
    'page arguments' => array(2),
    'access callback' => 'user_is_logged_in',
  );

  return $items;
}

function dosomething_drives_join($gid) {
  global $user;
  // submit the sign up form
  $group = og_load($gid);
  $submission = reset(entity_load('webform_submission_entity', array($group->etid)));
  $nid = $submission->nid;

  $profile = profile2_load_by_user($user, 'main');
  if ($profile) {
    $mobile = field_get_items('profile2', $profile, 'field_user_mobile');
    $mobile = $mobile[0]['value'];
    $submission = (object) array(
      'sid' => NULL,
      'nid' => $nid,
      'uid' => $user->uid,
      'submitted' => REQUEST_TIME,
      'remote_addr' => ip_address(),
      'is_draft' => 0,
      'data' => array(
      ),
      'bundle' => 'campaign_sign_up',
      'field_webform_email' => array(
        LANGUAGE_NONE => array(
          array('email' => $user->mail),
        ),
      ),
      'field_webform_mobile' => array(
        LANGUAGE_NONE => array(
          array('value' => $mobile),
        ),
      ),
    );
    entity_save('webform_submission_entity', $submission);
  }
  teams_join_by_url($gid, teams_get_group_hash($gid));
}

function dosomething_drives_get_drive_nid($campaign_group) {
  $gid = $campaign_group->gid;
  // entity field query where we filter by group_group field
  $q = new EntityFieldQuery();
  $result = $q
    ->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'drive_form')
    ->fieldCondition('group_audience', 'gid', $gid)
    ->execute();
  $result = reset($result);
  return reset($result)->nid;
}

function dosomething_drives_teams_added_email_alter(&$params, $gid) {
  if (!dosomething_drives_is_drive($gid)) return;

  $params['type'] = 'drive';
}

function dosomething_drives_teams_invite_email_alter(&$params, $gid) {
  if (!dosomething_drives_is_drive($gid)) return;

  $params['type'] = 'drive';
  $params['link'] = url("drive/join/$gid", array('absolute' => true));
}

function dosomething_drives_is_drive($gid) {
  $submission = og_load_entity_from_group($gid);
  $node = node_load($submission->nid);
  $is_drive = true;
  foreach ($node->field_signup_magic_fields[LANGUAGE_NONE] as $enabled_field) {
    // short-circuit if this is a team and not a drive
    if ($enabled_field['value'] == 'field_leader_info') {
      return false;
    }
  }
  return true;
}

/**
 * This is for Be the Match functionality ONLY.
 */
function dosomething_drives_form_webform_client_form_724779_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'dosomething_drives_match_email';
}

function dosomething_drives_match_email($form, &$form_state) {
  if (!isset($form_state['values']['submitted_tree']['give_a_spit_action_kit'])) return;

  if ($form_state['values']['submitted_tree']['give_a_spit_action_kit'][0] == 'yes') {
    $vals['email'] = $form_state['values']['submitted_tree']['field_webform_email'][LANGUAGE_NONE][0]['email'];
    $vals['mobile'] = $form_state['values']['submitted_tree']['field_webform_mobile'][LANGUAGE_NONE][0]['value'];
    $address_fields = array('address_1', 'address_2', 'city', 'state');
    foreach ($address_fields as $field) {
      $vals[$field] = $form_state['values']['submitted_tree'][$field];
    }
    $email = 'recruitment@nmdp.org';
    drupal_mail('dosomething_drives', 'be_the_match', $email, $language, $vals);
  }
}

/**
 * Implements hook_mail().
 */
function dosomething_drives_mail($key, &$message, $params) {
  switch ($key) {
    case 'be_the_match':
      $message['subject'] = t('Give a Spit Signup from @email', array('@email' => $params['email']));
      $message['body'][] = drupal_html_to_text(theme('dosomething_drives_match', $params));
      $message['headers']['From'] = $params['email'] . '<' . $params['email'] . '>';
      $message['headers']['Reply-To'] = $params['email'];
      break;
  }
}

/**
 * Implements hook_theme().
 */
function dosomething_drives_theme($existing, $type, $theme, $path) {
  return array(
    'dosomething_drives_match' => array(
      'path' => $path,
      'variables' => array(),
      'template' => 'be-the-match',
    ),  
  );
}
