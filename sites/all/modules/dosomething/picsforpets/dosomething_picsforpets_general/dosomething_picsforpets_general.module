<?php
/**
 * @file
 * Code for the dosomething_picsforpets_general feature.
 */

include_once 'dosomething_picsforpets_general.features.inc';

// The node id for the pet submission form.
define('PICSFORPETS_PET_SUBMISSION_NID', 3);

/**
 * Implements hook_menu().
 */
function dosomething_picsforpets_general_menu() {
  $items['pics-for-pets/share/js/%'] = array(
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'page callback' => 'dosomething_picsforpets_general_share',
    'page arguments' => array(3),
  );
  $items['pics-for-pets/become-a-furtographer'] = array(
    'title' => t('Become a Furtographer!'),
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dosomething_picsforpets_general_furtographer_form'),
  );
  $items['pics-for-pets/thanks-for-sharing'] = array(
    'title' => t('Thanks for sharing!'),
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dosomething_picsforpets_general_thanks_form'),
  );
  return $items;
}

/**
 * Form that pops up when you click 'become a furtographer'.
 */
function dosomething_picsforpets_general_furtographer_form($form, &$form_state) {
  $form['#attributes'] = array(
    'title' => 'Ready to be a fur-tographer?',
  );
  $form['ready'] = array(
    '#markup' => 'Sign up and we\'ll give you all the tools to submit a picture to the gallery.',
  );
  $form['email'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Email:'),
    '#maxlength' => 255,

  );
  $form['cell'] = array(
    '#type' => 'textfield',
    '#title' => t('Cell:'),
    '#maxlength' => 255,
  );
  $form['kit'] = array(
    '#type' => 'checkbox',
    '#title' => t('Send me an action kit with sweet guides and supplies!'),
    '#ajax' => array(
      'callback' => 'dosomething_picsforpets_general_kit_ajax_callback',
      'wrapper' => 'dropdown-second-replace',
    ),
  );
  $form['address'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('address'),
    'name' => array(
      '#type' => 'textfield',
    ),
    'street1' => array(
      '#type' => 'textfield',
    ),
    'street2' => array(
      '#type' => 'textfield',
    ),
    'city' => array(
      '#type' => 'textfield',
    ),
    'state' => array(
      '#type' => 'textfield',
    ),
    'zip' => array(
      '#type' => 'textfield',
    ),
  );
  $form['help'] = array(
    '#markup' => t('By signing up you agree to the ') . l('terms and conditions', '/') . ' <a class="helptext-questionmark-popup">' . t('Enter your phone number to get weekly updates from DoSomething.org, including campaign news and chances to win prizes and scholarships. (Message and data rates may apply. Text STOP to opt-out. Email help@dosomething.org or text HELP for help.)') . '</a>',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Sign Up',
  );
  return $form;
}

//function dosomething_picsforpets_general_kit_ajax_callback()
/**
 * Form that pops up after you have shared 3 pets.
 */
function dosomething_picsforpets_general_thanks_form($form, &$form_state) {
  $form['#attributes'] = array(
    'title' => t('Thanks for sharing!'),
  );
  $form['title'] = array(
    '#markup' => '<h1>' . t('Thanks for sharing!') . '</h1>',
  );
  $form['instructions'] = array(
    '#markup' => t("Enter your info and we'll send you updates on animals in the gallery"),
  );
  $form['email'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Email:'),
    '#maxlength' => 255,

  );
  $form['cell'] = array(
    '#type' => 'textfield',
    '#title' => t('Cell:'),
    '#maxlength' => 255,
  );
  $form['help'] = array(
    '#markup' => t('Click submit to sign up and recieve weekly updates <a class="helptext-questionmark-popup">Enter your phone number to get weekly updates from DoSomething.org, including campaign news and chances to win prizes and scholarships. (Message and data rates may apply. Text STOP to opt-out. Email help@dosomething.org or text HELP for help.)</a>'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}

/**
 * Default validation handler for the
 * dosomething_picsforpets_general_thanks_form.
 */
function dosomething_picsforpets_general_thanks_form_validate($form, &$form_state) {
  dpm('validating');
}

/**
 * Default submit handler for the
 * dosomething_picsforpets_general_thanks_form.
 */
function dosomething_picsforpets_general_thanks_form_submit($form, &$form_state) {
  dpm('submitting');
}
/**
 * Implements hook_custom_theme().
 */
function dosomething_picsforpets_general_custom_theme() {
  // Use the picsforpets theme when on the pics-for-pets paths and entities of the site.
  if (arg(0) == 'pics-for-pets') {
    return 'picsforpets';
  }
  if ($submission = menu_get_object('webform_entity_pages_submission')) {
    if ($submission->nid == PICSFORPETS_PET_SUBMISSION_NID) {
      return 'picsforpets';
    }
  }
  if ($node = menu_get_object()) {
    if ($node->nid == PICSFORPETS_PET_SUBMISSION_NID) {
      return 'picsforpets';
    }
  }
}

/*
* Implements hook_ctools_plugin_directory().
*/
function dosomething_picsforpets_general_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Share (like) a webform submission on facebook.
 */
function dosomething_picsforpets_general_share($sid) {
  $_fb_app = fb_load('picsforpets');
  $fb = fb_api_init($_fb_app);
  $access_token = fb_get_token($fb);
  if (is_numeric($sid)) {
    $url = drupal_get_path_alias('webform-submission/' . $sid);
    $response = drupal_http_request('https://graph.facebook.com/' . 'http://apps.facebook.com/picsforpets/' . $url . '/likes' , array('method' => 'POST', 'data' => 'access_token=' . $access_token));
    dpm($response);
  }
  return '';
}
