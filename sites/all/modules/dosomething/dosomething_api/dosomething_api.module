<?php

/**
 *  Log in a user.
 *
 *  @param string $e_or_c
 *    A user's email or cell.  Will check against a formatted (e.g. with dashes)
 *    and unformatted version of a mobile number, if appropriate.
 *
 *  @param object $account
 *    If available, the account object for the user.  If unspecified, will get the
 *    object from dosomething_api_user_lookup() function.
 *
 *  @see dosomething_api_user_lookup()
 */
function dosomething_api_user_log_in($e_or_c, $uid = 0, $account = array()) {
  if (!$uid) {
    $account = dosomething_api_user_lookup($e_or_c);
  }
  elseif ($uid > 0) {
    $account->uid = $uid;
  }

  if (!empty($account)) {
  	$u = array('uid' => $account->uid);
  	user_login_submit(array(), $u);
  }

  return $account;
}

/**
 * Load up the related user given and email or cell phone value.
 *
 * @param $value
 *   An email or cell phone value.
 * @return
 *  Either FALSE or the loaded user account.
 */
function dosomething_api_user_lookup($value) {
  $account = FALSE;
  if (valid_email_address($value)) {
    $account = user_load_by_mail($value);
  }
  else if ($number = dosomething_general_valid_cell($value)) {
    $account = dosomething_general_find_user_by_cell($number);
  }
  return $account;
}

function dosomething_api_user_fetch_data($data = array('account' => array(), 'profile' => array())) {
  global $user;
  if (!$user->uid) {
    return false;
  }

  $return = array();
  if (isset($data['account'])) {
    foreach ($data['account'] AS $field) {
      if (isset($user->{$field})) {
        $return[$field] = $user->{$field};
      }
    }
  }
  if (isset($data['profile'])) {
    $p = profile2_load_by_user($user, 'main');
    foreach ($data['profile'] AS $field => $alias) {
      if (isset($p->{$field}[LANGUAGE_NONE][0]['value'])) {
        $return[($alias ? $alias : $field)] = $p->{$field}[LANGUAGE_NONE][0]['value'];
      }
    }
  }

  return $return;
}

function dosomething_api_user_create($info = array('name' => '', 'email' => '', 'mobile' => ''), $login = FALSE) {
  // Start the account class.
  $account = new stdClass;

  // If we don't have a name, default to "Guest user"
  if (empty($info['name'])) {
    $info['name'] = t('Guest user');
  }

  $suffix = 0;
  $account->name = $info['name'];
  // If we can find users with that exact name, append a number to the end.
  while (user_load_by_name($account->name)) {
     $suffix++;
     $account->name = $info['name'] . '-' . $suffix;
  }

  // Create a random password for the user.
  if (!$this['password']) {
    $pass = user_password(6);
  }
  else {
    $pass = $this['password'];
  }
  require_once('includes/password.inc');
  $hashed_pass = user_hash_password($pass);
  $account->pass = $hashed_pass;

  // Set the email address (or "fake" email for mobile)
  $account->mail = ($info['email'] ? $info['email'] : $info['mobile'] . '@mobile');
  // The user account is activated.
  $account->status = 1;

  // Save the user.
  $account = user_save($account);

  // Load a profile object for the user.
  $profile_values = array('type' => 'main');
  $profile = profile2_create($profile_values);
  $profile->uid = $account->uid;
      
  // If we have the user's phone number, set that.
  if (!empty($info['mobile'])) {
   $profile->field_user_mobile[LANGUAGE_NONE][0]['value'] = $info['mobile'];
  }
  // If they have a real first name, set that.
  if ($info['name'] != 'Guest user') {
     $profile->field_user_first_name[LANGUAGE_NONE][0]['value'] = $info['name'];
  }

  // Try and save the profile and set a message that we did so...
  try {
    profile2_save($profile);
    watchdog('Api', t('A user was successfully created with the email / cell ' . ($info['email'] ? $info['email'] : $info['mobile'])));
  }
  // ...or throw an exception saying we failed.
  catch (Exception $e) {
    throw new ApiException(t('Sorry, there was a problem creating the account.'));
  }

  // Set the profile object as a sub-object of user.
  $account->profile = $profile;

  return $account;
}