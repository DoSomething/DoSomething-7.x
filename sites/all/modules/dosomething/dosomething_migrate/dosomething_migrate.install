<?php

/**
 * @file
 * Install file for the migration  module.
 * Creates nodes and webform elements and enables modules.
 */

/**
 * Implements hook_install().
 */
function dosomething_migrate_install() {
  dosomething_migrate_set_webform_types();
  dosomething_migrate_regenerate_webform_nodes();
}

/**
 * Implements hook_schema().
 */

function dosomething_migrate_schema() {
  $schema = array();
  $schema['dosomething_project_nid_sid_map'] = array(
    'description' => 'Stores some backup data of project node to project webform sid mappings',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid is the primary identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ref_nid' => array(
        'description' => 'The old node reference node id.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'ref_sid' => array(
        'description' => 'The {webform_submission}.sid that the node ref mapped to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'node' => array('nid'),
      'ref_nid' => array('ref_nid'),
      'ref_sid' => array('ref_sid'),
    ),
  );
  $schema['dosomething_project_nid_sid_fails'] = array(
    'description' => 'Stores {node}.nid that failed to properly map a project node ref to a preject webform submission ref.',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid is the primary identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'node' => array('nid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_update_N().
 */
function dosomething_migrate_update_7000() {
  $name = 'dosomething_project_nid_sid_map';
  $table = array(
    'description' => 'Stores some backup data of project node to project webform sid mappings',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid is the primary identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ref_nid' => array(
        'description' => 'The old node reference node id.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'ref_sid' => array(
        'description' => 'The {webform_submission}.sid that the node ref mapped to.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'node' => array('nid'),
      'ref_nid' => array('ref_nid'),
      'ref_sid' => array('ref_sid'),
    ),
  );
  db_create_table($name, $table);
}

/**
 * Update 7001 - Add a table to track failed project mappings from node to webform.
 */
function dosomething_migrate_update_7001() {
  $name = 'dosomething_project_nid_sid_fails';
  $table = array(
    'description' => 'Stores {node}.nid that failed to properly map a project node ref to a preject webform submission ref.',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid is the primary identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'node' => array('nid'),
    ),
  );
  db_create_table($name, $table);
}

/**
 * Update 7002 - Update the variable that maps old content types to new ids.
 */
function dosomething_migrate_update_7002() {
  $mapping = variable_get('webform_migrate_webform_mapping', NULL);
  $mapping['ididthis'] = $mapping['project'];
  variable_set('webform_migrate_webform_mapping', $mapping);
}

/**
 * Copy the default search image and re-use it as the default profile picture.
 */
function dosomething_migrate_update_7003() {
  $source = drupal_get_path('theme', 'doit') . '/default-search-image.jpg';
  $destination = 'public://default-profile-picture.jpg';
  $copied = file_unmanaged_copy($source, $destination);
  if ($copied !== FALSE) {
    variable_set('user_picture_default', $copied);
  }
  else {
    throw new DrupalUpdateException('The new profile picture could not be uploaded.');
  }
}
