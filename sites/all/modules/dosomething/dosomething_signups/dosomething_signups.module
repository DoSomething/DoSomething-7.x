<?php

/**
 * @file
 * dosomething_signups.module
 */

/**
 * Implements hook_menu().
 */
function dosomething_signups_menu() {
  $items = array();
  $items['campaign/join/%node'] = array(
    'page callback' => 'dosomething_signups_join_page',
    'page arguments' => array(2),
    'access callback' => 'dosomething_signups_join_page_access',
    'access arguments' => array(2),
    'file' => 'dosomething_signups.pages.inc',
  );
  return $items;
}

/**
 * Retuns boolean if given $user can access join and campaign pages regardless of signup.
 *
 * @param $user
 *  User object of user to check.
 *
 * @return boolean
 */
function dosomething_signups_can_user_override_join($user) {
  return user_access('administer modules', $user);
}

/**
 * Inserts a record for given user UID and campaign node NID in signups table.
 */
function dosomething_signups_insert_signup($uid, $nid) {
  $signup = db_insert('dosomething_signups')
  ->fields(array(
    'uid' => $uid,
    'nid' => $nid,
    'timestamp' => REQUEST_TIME,
    ))
  ->execute();
}

/**
 * Returns boolean for if given user uid is signed up given nid.
 */
function dosomething_signups_is_user_signed_up($uid, $nid) {
  $signup = db_query('SELECT uid 
    FROM {dosomething_signups} 
    WHERE uid = :uid AND nid = :nid', array(':uid' => $uid, ':nid' => $nid))->fetchField();
  if ($signup) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Access callback for join page.
 */
function dosomething_signups_join_page_access($node) {
  // Join page is only valid for gated signup nodes:
  if (!dosomething_login_is_gated_signup_node($node)) {
    return FALSE;
  }
  global $user;
  // Allow access if user can access page unconditionally.
  if (dosomething_signups_can_user_override_join($user)) {
    return TRUE;
  }
  // Otherwise, only grant access for logged in users.
  return $user->uid != 0;
}

/**
 * Handles a node signup and its relevant subscribe calls.
 * Best function name ever.
 *
 * @param $account
 *  Loaded user object of user who signing up.
 * @param $node
 *  Loaded node object that user is signing up for.
 */
function dosomething_signups_signup($account, $node) {
  // If user is already signed up, don't sign up again.
  // Shouldn't ever really happen, but it's a sanity check.
  if (dosomething_signups_is_user_signed_up($account->uid, $node->nid)) {
    return;
  }
  // Insert signups record:
  dosomething_signups_insert_signup($account->uid, $node->nid);
  // Subscribe to Mailchimp:
  if (isset($node->field_mailchimp_group[LANGUAGE_NONE][0]['value'])) {
    dosomething_subscribe_mailchimp_signup($account->mail, $node->field_mailchimp_group[LANGUAGE_NONE][0]['value']);
  }
  // Subscribe to Mobilecommons:
  if (isset($node->field_mobilecommons_opt_in[LANGUAGE_NONE][0]['value'])) {
    $cell = '';
    $user2 = profile2_load_by_user($account, 'main');
    $cell = field_get_items('profile2', $user2, 'field_user_mobile');
    $cell = $cell[0]['value'];
    if (!empty($cell)) {
      $response = dosomething_general_mobile_commons_subscribe($cell, $node->field_mobilecommons_opt_in[LANGUAGE_NONE][0]['value']);
      watchdog('dosomething_signups', 'cell = ' . $cell . ' opt_in = ' . $node->field_mobilecommons_opt_in[LANGUAGE_NONE][0]['value'] . ' response = ' . print_r($response, TRUE));
    }
  }
  // Send Mandrill mail:
  if (isset($node->field_mandrill_key[LANGUAGE_NONE][0]['value'])) {
    dosomething_mandrill_dispatch($account->mail, $node->field_mandrill_key[LANGUAGE_NONE][0]['value']);
  }
  // Set success message:
  drupal_set_message(dosomething_signups_get_signup_success_msg($node));
}

/**
 * Returns a given node's Signup Success Message field value
 * Outputs a default variable value if a field value doesn't exist.
 *
 * @param $node
 *  Loaded node object that user has signed up for.
 */
function dosomething_signups_get_signup_success_msg($node) {
  if (isset($node->field_signup_success_msg[LANGUAGE_NONE][0]['value']) && !empty($node->field_signup_success_msg[LANGUAGE_NONE][0]['value'])) {
    $msg = $node->field_signup_success_msg[LANGUAGE_NONE][0]['value'];
  }
  else {
    $msg = variable_get('dosomething_signups_default_signup_success_msg', t('Thanks for signing up!'));
  }
  return $msg;
}
