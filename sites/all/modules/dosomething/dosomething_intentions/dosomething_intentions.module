<?php
/**
 * @file
 * Custom modifications for the action guide intentions form.
 */

/**
 * Implements hook_form_alter().
 */
function dosomething_intentions_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'webform_client_form_') === 0) {
    $node = $form['#node'];
    if ($node->type == 'action_guide') {
      global $user;
      if (webform_get_submission_count($node->nid, $user->uid) || isset($_SESSION['dosomething_intentions'][$node->nid])) {
        foreach (element_children($form) as $child) {
          unset($form[$child]);
        }
        $form['complete'] = array(
          '#markup' => '<p>' . t('Sweet. I am going to do this') . '</p>',
        );
      }
      else {
        // If not a draft, then we only show the email and only allow a save.
        // Don't remove these fields on an edit page.
        if ((!$form['#is_draft'] && $node->webform['allow_draft']) && arg(4) != 'edit') {
          // Restrict access to custom fields.
          foreach (element_children($form) as $child) {
            if (!in_array($child, array('submitted', 'actions', 'form_build_id', 'form_token', 'form_id', 'details', 'hidden'))) {
             $form[$child]['#access'] = FALSE;
            }
          }
          // Restrict access to webform entity fields.
          if (isset($form['submitted']['webform_entity_form'])) {
            foreach (element_children($form['submitted']['webform_entity_form']) as $child) {
              if (!in_array($child, array('field_action_intention_email'))) {
               $form['submitted']['webform_entity_form'][$child]['#access'] = FALSE;
              }
            }
          }
          $form['actions']['submit']['#access'] = FALSE;
          $form['actions']['draft']['#value'] = t('Absolutely!');
        }

        $form['actions']['submit']['#value'] = t('Absolutely!');
        if ($user->uid) {
          $lang = $form['submitted']['webform_entity_form']['field_action_intention_email']['#language'];
          if (!isset($form['submitted']['webform_entity_form']['field_action_intention_email'][$lang][0]['email']['#default_value'])) {
            $form['submitted']['webform_entity_form']['field_action_intention_email'][$lang][0]['email']['#default_value'] = $user->mail;
          }
        }
        if (!$user->uid) {
          $form['#submit'][] = 'dosomething_intentions_webform_submission_submit';
        }
        $form['actions']['draft']['#validate'][] = 'dosomething_intentions_webform_submission_draft_validate';
      }
      $form['total'] = array(
        '#markup' => '<p>' . t('!total people have committed to this one.', array('!total' => webform_get_submission_count($node->nid))) . '</p>',
        '#weight' => 200,
      );
    }
  }
}

/**
 * Validation callback for webform draft submissions.
 */
function dosomething_intentions_webform_submission_draft_validate(&$form, &$form_state) {
  // Don't throw required field errors for required fields.
  // This is a draft and fields should only be required on submission.
  // Make sure to add back any errors that are not required field related.
  form_clear_error();
  $messages = drupal_get_messages('error');
  if (count($messages['error'])) {
    foreach ($messages['error'] as $message) {
      if (!preg_match('/field is required.$/', $message)) {
        drupal_set_message($message, 'error');
      }
    }
  }
}

function dosomething_intentions_webform_submission_submit(&$form, &$form_state) {
  $_SESSION['dosomething_intentions'][$form['#node']->nid] = 1;
}

/**
 * Implements hook_node_load().
 */
function dosomething_intentions_node_load($nodes, $types) {
  foreach ($nodes as $node) {
    if ($node->type == 'action_guide') {
      // Set some webform settings so that these apply to every webform of this type.
      $nodes[$node->nid]->webform['submit_notice'] = 0;
      $nodes[$node->nid]->webform['redirect_url'] = '<none>';
      $nodes[$node->nid]->webform['submit_limit'] = -1;
      $nodes[$node->nid]->webform['allow_draft'] = 1;
    }
  }
}
