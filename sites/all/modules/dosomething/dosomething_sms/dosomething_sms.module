<?php

function dosomething_sms_conductor_sms_keywords() {
  return array(
    //'zivtech' => 'ds_sms_user_registration',
    //'zivtech2' => 'ds_sms_project_report_back',
    'checked' => 'ds_sms_iheartdad_checked',
    'epicshare' => 'ds_sms_epic_2012_report_back',
    'epicsharetest' => 'ds_sms_epic_2012_report_back',
    'register' => 'ds_sms_user_registration',
    'testreport' => 'ds_sms_project_report_back',
    'gastellus' => 'ds_sms_gas_2012_report_back',
  );
}

/**
 * Implements hook_ctools_plugin_api().
 */
function dosomething_sms_ctools_plugin_api($owner, $api) {
  // TODO: $api should be workflow, not conductor but that messes with features file naming.
  if ($owner == 'conductor' && $api == 'conductor') {
    return array('version' => 1.0);
  }
}

/**
 *
 * TODO: Does this implement a hook?
 */
function dosomething_sms_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'conductor') {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_default_conductor_default_workflows().
 */
function dosomething_sms_default_conductor_workflows() {
  $workflows = array();
  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'ds_sms_user_registration';
  $workflow->title = 'User Registration';
  $workflow->description = 'Allows users to register for the site via SMS.';
  $workflow->api_version = '1.0';
  // Add and configure workflow activities.
  $activity = $workflow->newActivity('start');
  $activity->x = 280;
  $activity->y = 200;
  $activity->name = 'start';
  $activity->title = 'Start';
  $activity->outputs = array(
    'first_name',
  );
  $activity->inputs = array();

  // TODO: Should this qustion be named prompt?
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'first_name';
  $activity->title = 'First Name';
  $activity->question = 'Thanks for registering! Just a few questions: what is your first name?';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'last_name'
  );

  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'last_name';
  $activity->title = 'Last Name';
  $activity->question = 'Great! Two more questions!  What is your last name?';
  $activity->inputs = array(
    'first_name',
  );
  $activity->outputs = array(
    'birthday'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'birthday';
  $activity->title = 'Birth Day';
  $activity->question = 'Awesome!  What is your birthday (mm/dd/yyyy)?';
  $activity->inputs = array(
    'last_name',
  );
  $activity->outputs = array(
    'signature_remover'
  );

  $activity = $workflow->newActivity('sms_strip_signature');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'signature_remover';
  $activity->title = 'Remove the signature from all sms context.';
  $activity->inputs = array(
    'birthday',
  );
  $activity->outputs = array(
    'user_creator'
  );

  $activity = $workflow->newActivity('ds_create_user');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'user_creator';
  $activity->title = 'Create a user from the existing context.';
  $activity->inputs = array(
    'signature_remover',
  );
  $activity->outputs = array(
    'end'
  );

  $activity = $workflow->newActivity('end');
  $activity->x = 380;
  $activity->y = 200;
  $activity->name = 'end';
  $activity->title = 'End';
  $activity->inputs = array(
    'user_creator'
  );
  $activity->outputs = array();
  $workflows[$workflow->name] = $workflow;

  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'ds_sms_project_report_back';
  // TODO: Are these the proper title and desription for this workflow?
  $workflow->title = 'User Registration';
  $workflow->description = 'Allows users to register for the site via SMS.';
  $workflow->api_version = '1.0';
  // Add and configure workflow activities.
  $activity = $workflow->newActivity('start');
  $activity->x = 280;
  $activity->y = 200;
  $activity->name = 'start';
  $activity->title = 'Start';
  $activity->outputs = array(
    'title',
  );
  $activity->inputs = array();
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'title';
  $activity->title = 'Project title';
  $activity->question = 'Thanks for telling us about your project, what is the title?';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'goal'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'goal';
  $activity->title = 'Project Goal';
  $activity->question = 'Awesome, what\'s the goal of your project?';
  $activity->inputs = array(
    'title',
  );
  $activity->outputs = array(
    'involved'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'involved';
  $activity->title = 'People involved';
  $activity->question = 'Great, how many people are involved?';
  $activity->inputs = array(
    'goal',
  );
  $activity->outputs = array(
    'helped'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'helped';
  $activity->title = 'People helped';
  $activity->question = 'Amazing, how many people did you help?';
  $activity->inputs = array(
    'involved',
  );
  $activity->outputs = array(
    'signature_remover'
  );
  $activity = $workflow->newActivity('sms_strip_signature');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'signature_remover';
  $activity->title = 'Remove the signature from all sms context.';
  $activity->inputs = array(
    'helped',
  );
  $activity->outputs = array(
    'create_report_back'
  );
  $activity = $workflow->newActivity('ds_create_report_back');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'create_report_back';
  $activity->title = 'Create a campaign report back from the existing context.';
  $activity->inputs = array(
    'signature_remover',
  );
  $activity->outputs = array(
    'end'
  );
  $activity = $workflow->newActivity('end');
  $activity->x = 380;
  $activity->y = 200;
  $activity->name = 'end';
  $activity->title = 'End';
  $activity->inputs = array(
    'create_report_back'
  );
  $activity->outputs = array();
  $workflows[$workflow->name] = $workflow;

  /**
   * Workflow for Epic 2012 report back
   */
  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'ds_sms_epic_2012_report_back';
  $workflow->title = 'Epic 2012 Report Back';
  $workflow->description = 'Submit report backs for Epic Book Drive 2012.';
  $workflow->api_version = '1.0';

  // Starting activity
  $activity = $workflow->newActivity('start');
  $activity->x = 80;
  $activity->y = 100;
  $activity->name = 'start';
  $activity->title = 'Start';
  $activity->outputs = array(
    'get_school_id',
  );
  // Check if we have the user's school id
  $activity = $workflow->newActivity('ds_get_school_id');
  $activity->x = 80;
  $activity->y = 100;
  $activity->name = 'get_school_id';
  $activity->title = 'Get user\'s school id from mCommons profile';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'ask_school_name',
  );
  // Ask for the school
  $activity = $workflow->newActivity('ds_ask_school_name');
  $activity->x = 80;
  $activity->y = 100;
  $activity->name = 'ask_school_name';
  $activity->title = 'Ask user for their state and school name';
  $activity->question = 'O.K. let\'s get started. First, text us your state abbreviation and full school name! (ex. va groves high school)';
  $activity->inputs = array(
    'get_school_id',
  );
  $activity->outputs = array(
    'recv_school_name',
  );
  // Receive and process the school name
  $activity = $workflow->newActivity('ds_receive_school_name');
  $activity->x = 80;
  $activity->y = 100;
  $activity->name = 'recv_school_name';
  $activity->title = 'Receive and process the state and school name';
  $activity->inputs = array(
    'ask_school_name'
  );
  $activity->outputs = array(
    'recv_school_id'
  );
  // Receive and process the school id 
  $activity = $workflow->newActivity('ds_receive_school_id');
  $activity->x = 80;
  $activity->y = 100;
  $activity->name = 'recv_school_id';
  $activity->title = 'Receive and process the school ID or NOID';
  $activity->inputs = array(
    'recv_school_name'
  );
  $activity->outputs = array(
    'get_books'
  );
  // Get the number of books donated
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 280;
  $activity->y = 100;
  $activity->name = 'get_books';
  $activity->title = 'Get the number of books';
  $activity->question = 'Awesome!! So how many books were donated through your drive? Please respond with a # (ex. 20)';
  $activity->inputs = array(
    'recv_school_id',
  );
  $activity->outputs = array(
    'get_volunteers'
  );
  // Get the number of volunteers
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 280;
  $activity->y = 120;
  $activity->name = 'get_volunteers';
  $activity->title = 'Get the number of volunteers';
  $activity->question = 'And how many people are in your drive group? Please respond with a # (ex. 20)';
  $activity->inputs = array(
    'get_books',
  );
  $activity->outputs = array(
    'get_donators'
  );
  // Get the number of people who donated
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 280;
  $activity->y = 140;
  $activity->name = 'get_donators';
  $activity->title = 'Get the number of people who donated books';
  $activity->question = 'Impressive! How many people donated books to your drive? Please respond with a # (ex. 20)';
  $activity->inputs = array(
    'get_volunteers',
  );
  $activity->outputs = array(
    'get_first_name'
  );
  // Not guaranteed to have user's first name and last name, so ask for those too
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 280;
  $activity->y = 160;
  $activity->name = 'get_first_name';
  $activity->title = 'Get the user\'s first name.';
  $activity->question = 'Thanks! We just need two more answers (promise!). Please reply with your first name.';
  $activity->inputs = array(
    'get_donators'
  );
  $activity->outputs = array(
    'get_last_name'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 280;
  $activity->y = 180;
  $activity->name = 'get_last_name';
  $activity->title = 'Get the user\'s last name.';
  $activity->question = 'And lastly, please reply with your last name.';
  $activity->inputs = array(
    'get_first_name',
  );
  $activity->outputs = array(
    'signature_remover'
  );
  // Strip SMS signature before processing for report back
  $activity = $workflow->newActivity('sms_strip_signature');
  $activity->x = 280;
  $activity->y = 200;
  $activity->name = 'signature_remover';
  $activity->title = 'Remove the signature from all sms context.';
  $activity->inputs = array(
    'get_last_name',
  );
  $activity->outputs = array(
    'create_epic_2012_report_back'
  );
  // Create Epic 2012 report back
  $activity = $workflow->newActivity('ds_epic_2012_report_back');
  $activity->x = 280;
  $activity->y = 220;
  $activity->name = 'create_epic_2012_report_back';
  $activity->title = 'Create an Epic 2012 campaign report back from the existing context.';
  $activity->inputs = array(
    'signature_remover',
  );
  $activity->outputs = array(
    'end'
  );
  // Final state
  $activity = $workflow->newActivity('end');
  $activity->x = 480;
  $activity->y = 220;
  $activity->name = 'end';
  $activity->title = 'End';
  $activity->inputs = array(
    'create_epic_2012_report_back'
  );
  $activity->outputs = array();
  $workflows[$workflow->name] = $workflow;

  /**
   * Workflow for I<3Dad CHECKED keyword
   */
  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'ds_sms_iheartdad_checked';
  $workflow->title = 'I <3 Dad CHECKED workflow';
  $workflow->description = 'I <3 Dad CHECKED workflow asks for zipcode and blood pressure.';
  $workflow->api_version = '1.0';

  // Starting activity
  $activity = $workflow->newActivity('start');
  $activity->x = 80;
  $activity->y = 100;
  $activity->name = 'start';
  $activity->title = 'Start';
  $activity->outputs = array(
    'ask_tested',
  );
  // Ask if blood pressure was tested
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 280;
  $activity->y = 160;
  $activity->name = 'ask_tested';
  $activity->title = 'Ask if blood pressure tested';
  $activity->question = 'Did you take your dad to get his blood pressure tested? Reply with Y or N.';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'ask_zipcode',
  );
  // Ask for zipcode if they replied y from ask_tested
  $activity = $workflow->newActivity('ds_conditional_sms_prompt');
  $activity->x = 480;
  $activity->y = 220;
  $activity->name = 'ask_zipcode';
  $activity->title = 'Ask for zipcode';
  $activity->question = 'Awesome, what\'s your zipcode?';
  $activity->conditional_check = 'ask_tested:message';
  $activity->run_on_conditional_values = array(
    'y',
    'yes',
    'yea',
    'ya',
  );
  $activity->inputs = array(
    'ask_tested',
  );
  $activity->outputs = array(
    'ask_pressure',
  );
  // Ask for blood pressure if replied y from ask_tested
  $activity = $workflow->newActivity('ds_conditional_sms_prompt');
  $activity->x = 480;
  $activity->y = 220;
  $activity->name = 'ask_pressure';
  $activity->title = 'Ask for blood pressure';
  $activity->question = 'Great! We love dads baring their arms. What were his blood pressure numbers? (Reply in #/# format)';
  $activity->conditional_check = 'ask_tested:message';
  $activity->run_on_conditional_values = array(
    'y',
    'yes',
    'yea',
    'ya',
  );
  $activity->inputs = array(
    'ask_zipcode',
  );
  $activity->outputs = array(
    'end_response',
  );
  // Final response state of CHECKED workflow.
  $activity = $workflow->newActivity('ds_iheartdad_2012_checked_response');
  $activity->x = 480;
  $activity->y = 220;
  $activity->name = 'end_response';
  $activity->title = 'Final CHECKED workflow response.';
  $activity->inputs = array(
    'ask_pressure',
  );
  $activity->outputs = array(
    'end',
  );
  // End state
  $activity = $workflow->newActivity('end');
  $activity->x = 480;
  $activity->y = 220;
  $activity->name = 'end';
  $activity->title = 'End';
  $activity->inputs = array(
    'end_response',
  );
  $activity->outputs = array();
  $workflows[$workflow->name] = $workflow;

  /**
   * Workflow for GAS 2012 report back
   */
  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'ds_sms_gas_2012_report_back';
  $workflow->title = 'GAS 2012 Report Back';
  $workflow->description = 'Processes GAS 2012 report backs';
  $workflow->api_version = '1.0';

  $activity = $workflow->newActivity('start');
  $activity->name = 'start';
  $activity->inputs = array();
  $activity->outputs = array('why_participated');

  $activity = $workflow->newActivity('sms_prompt');
  $activity->name = 'why_participated';
  $activity->question = 'Why did you sign up?';
  $activity->inputs = array('start');
  $activity->outputs = array('how_many_helped');

  $activity = $workflow->newActivity('sms_prompt');
  $activity->name = 'how_many_helped';
  $activity->question = 'Awesome! How many people helped you run your drive?';
  $activity->inputs = array('why_participated');
  $activity->outputs = array('how_many_swabbed');

  $activity = $workflow->newActivity('sms_prompt');
  $activity->name = 'how_many_swabbed';
  $activity->question = 'Great! And how many people did you swab?';
  $activity->inputs = array('how_many_helped');
  $activity->outputs = array('ds_gas_2012_report_back');

  $activity = $workflow->newActivity('ds_gas_2012_report_back');
  $activity->name = 'ds_gas_2012_report_back';
  $activity->inputs = array('how_many_swabbed');
  $activity->outputs = array('end');

  $activity = $workflow->newActivity('end');
  $activity->name = 'end';
  $activity->inputs = array('ds_gas_2012_report_back');
  $activity->outputs = array();

  $workflows[$workflow->name] = $workflow;

  return $workflows;
}

