<?php

/**
 * Implements hook_ctools_plugin_api().
 */
function dosomething_sms_ctools_plugin_api($owner, $api) {
  // TODO: $api should be workflow, not conductor but that messes with features file naming.
  if ($owner == 'conductor' && $api == 'conductor') {
    return array('version' => 1.0);
  }
}

/**
 *
 */
function dosomething_sms_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'conductor') {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_default_conductor_default_workflows().
 */
function dosomething_sms_default_conductor_workflows() {
  $workflows = array();
  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'ds_sms_user_registration';
  $workflow->title = 'User Registration';
  $workflow->description = 'Allows users to register for the site via SMS.';
  $workflow->api_version = '1.0';
  // Add and configure workflow activities.
  $activity = $workflow->newActivity('start');
  $activity->x = 280;
  $activity->y = 200;
  $activity->name = 'start';
  $activity->title = 'Start';
  $activity->outputs = array(
    'first_name',
  );
  $activity->inputs = array();
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'first_name';
  $activity->title = 'First Name';
  $activity->attribute = 'first';
  $activity->question = 'Thanks for registering! Just a few questions: what is your first name?';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'last_name'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'last_name';
  $activity->title = 'Last Name';
  $activity->attribute = 'last';
  $activity->question = 'Great! Two more questions!  What is your last name?';
  $activity->inputs = array(
    'first_name',
  );
  $activity->outputs = array(
    'birthday'
  );
  $activity = $workflow->newActivity('sms_prompt');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'birthday';
  $activity->title = 'Birth Day';
  $activity->attribute = 'birthday';
  $activity->question = 'Awesome!  What is your birthday (dd/mm/yyyy)?';
  $activity->inputs = array(
    'last_name',
  );
  $activity->outputs = array(
    'signature_remover'
  );
  $activity = $workflow->newActivity('sms_strip_signature');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'signature_remover';
  $activity->title = 'Remove the signature from all sms context.';
  $activity->inputs = array(
    'birthday',
  );
  $activity->outputs = array(
    'user_creator'
  );
  $activity = $workflow->newActivity('ds_create_user');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'user_creator';
  $activity->title = 'Create a user from the existing context.';
  $activity->inputs = array(
    'signature_remover',
  );
  $activity->outputs = array(
    'end'
  );
  $activity = $workflow->newActivity('end');
  $activity->x = 380;
  $activity->y = 200;
  $activity->name = 'end';
  $activity->title = 'End';
  $activity->inputs = array(
    'user_creator'
  );
  $activity->outputs = array();
  $workflows[$workflow->name] = $workflow;

  $workflow = new ConductorWorkflow;
  $workflow->wid = 'new';
  $workflow->name = 'simple_suspend_resume_test';
  $workflow->title = 'Simple suspend and resume test';
  $workflow->description = 'A simple workflow that suspends and then resumes an activity.';
  $workflow->api_version = '1.0';
  // Add and configure workflow activities.
  $activity = $workflow->newActivity('start');
  $activity->x = 280;
  $activity->y = 200;
  $activity->name = 'start';
  $activity->title = 'Start';
  $activity->outputs = array(
    'activity_2',
    'activity_3'
  );
  $activity->inputs = array();
  // Implement a new test for pausing, we shouldn't reuse the current test.
  $activity = $workflow->newActivity('test');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'activity_2';
  $activity->title = 'Activity 2';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'end'
  );
  $activity = $workflow->newActivity('test');
  $activity->x = 180;
  $activity->y = 100;
  $activity->name = 'activity_3';
  $activity->title = 'Activity 3';
  $activity->inputs = array(
    'start',
  );
  $activity->outputs = array(
    'end'
  );
  $activity = $workflow->newActivity('end');
  $activity->x = 380;
  $activity->y = 200;
  $activity->name = 'end';
  $activity->title = 'End';
  $activity->inputs = array(
    'activity_2',
    'activity_3'
  );
  $activity->outputs = array();
  $workflows[$workflow->name] = $workflow;


  return $workflows;
}
