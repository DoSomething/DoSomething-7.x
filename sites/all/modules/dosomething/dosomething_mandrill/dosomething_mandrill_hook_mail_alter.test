<?php
/*
 * @file
 * Unit Tests for DoSomething.org Mandrill transaction message system at the
 * hook_mail_alter point and beyond.
 */
class DoSomethingMandrillAlterUnitTestCase extends WebTestSuite  {
  
  const TEST_EMAIL = 'dlee+test@dosomething.org';
  
  public static function getInfo() {
    return array(
      'name' => 'DoSomething Mandrill hook_mail_alter Unit Tests',
      'description' => 'DoSomething Mandrill mail unit tests for the dosomething_mandrill_<mail system>_mail_alter() function and related functions.',
      'group' => 'DoSomething',
    );
  }

  public function setUp() {
    parent::setUp();
  }
    
  /**
   * @see dosomething_mandrill_mail_alter_to()
   *
   * Test constructing the $to array for submission to the Mandrill API based on
   * mail-template: https://mandrillapp.com/api/docs/messages.JSON.html#method=send-template
   *
   */
  public function testMailAlterTo() {

    // Pass email address as a string
    $mandrill_params = array();
    $message['to'] = self::TEST_EMAIL;
    $message['params']['FNAME'] = 'First';

    dosomething_mandrill_mail_alter_to($mandrill_params, $message);

    $this->assertTrue(self::TEST_EMAIL == $mandrill_params['message']['to'][0]['email'], 'Passed the string email: ' . self::TEST_EMAIL . ' to $mardrill_params was formatted correctly.');
    $this->assertTrue($message['params']['FNAME'] == $mandrill_params['message']['to'][0]['name'], 'Passed FNAME: ' . $message['params']['FNAME'] . ' to $mardrill_params was formatted correctly.');
    $this->assertTrue('to' == $mandrill_params['message']['to'][0]['type'], 'Message \'to\' type set to \'to\'');

    // Pass email as an array
    $mandrill_params = array();
    $message['to'] = array(
      0 => array(
        'email' => self::TEST_EMAIL,
      ),
    );
    $message['params']['FNAME'] = 'Second';

    dosomething_mandrill_mail_alter_to($mandrill_params, $message);

    $this->assertTrue($message['to'][0]['email'] == $mandrill_params['message']['to'][0]['email'], 'Passed the array email: ' . self::TEST_EMAIL . ' to $mardrill_params was formatted correctly.');
    $this->assertTrue($message['params']['FNAME'] == $mandrill_params['message']['to'][0]['name'], 'Passed FNAME: ' . $message['params']['FNAME'] . ' to $mardrill_params as array was formatted correctly.');
    $this->assertTrue('to' == $mandrill_params['message']['to'][0]['type'], 'Message \'to\' type passed as array set to \'to\'');

  }

}
