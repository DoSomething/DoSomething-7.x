<?php

/**
 * Implements hook_menu().
 */
function dosomething_feeds_menu() {
  $items = array();
  $items['news/feed'] = array(
    'title' => 'DoSomething.org News Feed',
    'page callback' => 'dosomething_feeds_news',
    'access callback' => TRUE,
    'description' => 'DoSomething.org News',
    'type' => MENU_CALLBACK,
    'page arguments' => array('type' => 'chatterbox', 'title' => 'DoSomething.org News Feed', 'description' => 'The DoSomething.org News Box'),
  );
  $items['cgg/rss'] = array(
    'title' => 'Celebs Gone Good',
    'page callback' => 'dosomething_feeds_news',
    'access callback' => TRUE,
    'description' => 'News on the latest Celebs Gone Good',
    'type' => MENU_CALLBACK,
    'page arguments' => array('type' => 'celebs_gone_good', 'title' => 'Celebs Gone Good', 'description' => 'News on the latest Celebs Gone Good'),
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function dosomething_feeds_theme() {
  return array(
    'dosomething_feed' => array(
      'template' => 'feeds',
      'path' => drupal_get_path('module', 'dosomething_feeds'),
      'variables' => array(
        'data' => NULL,
        'items' => NULL,
        'title' => NULL,
        'description' => NULL,
      ),
    ),
    'dosomething_feed_item' => array(
      'template' => 'feeds-item',
      'path' => drupal_get_path('module', 'dosomething_feeds'),
      'variables' => array(
        'item' => NULL,
      ),
    ),
  );
}

function dosomething_feeds_news($type, $title, $description) {
  global $base_url;
  drupal_add_http_header('Content-Type: text/xml; charset=utf-8');
  module_load_include('inc', 'dosomething_feeds', 'dosomething_feeds_get_view');
  switch ($type) {
    case 'chatterbox':
      $view = dosomething_feeds_get_news_feed_view();
      break;

    case 'celebs_gone_good':
      $view = dosomething_feeds_get_celebs_feed_view();
      break;
  }
  $view->execute();
  $results = $view->result;
  $output = array(
    '#theme' => 'dosomething_feed',
    '#data' => $view,
    '#title' => $title,
    '#description' => $description,
  );
  foreach ($results as $result) {
    //Handle the Images.
    $result->images = array();
    $result->happy = array();
    foreach ($result->field_field_picture as $picture) {
      $image_path = image_style_url($picture['rendered']['#image_style'], $picture['rendered']['#item']['uri']);
      $mime = $picture['rendered']['#item']['filemime'];
      $image_info = image_get_info(image_style_path($picture['rendered']['#image_style'], ($picture['rendered']['#item']['uri'])));
      $result->images[] = array(
        'path' => $image_path,
        'mime' => $mime,
        'width' => $image_info['width'],
        'height' => $image_info['height'],
      );
    }

    //Hanlde the taxonomy terms.
    $result->path = url('node/' . $result->nid, array('absolute' => TRUE));
    $result->term_paths = array();
    foreach ($result->field_taxonomy_vocabulary_5 as $term) {
      $tid = $term['raw']['tid'];
      $parent = "";
      $parents = taxonomy_get_parents($tid);
      $first = reset($parents);
      if ($first) {
        $parent = str_replace(" ", "+", $first->name . "/");
      }
      $main_part = str_replace(" ", "+", $term['rendered']['#title']);
      $result->term_paths[] = array(
        'path' => $base_url . '/whatsyourthing/' .  $parent . $main_part,
        'title' =>  $term['rendered']['#title'],
      );
    }
    $output['#items'][] = theme('dosomething_feed_item', array('item' => $result));
  }
  print drupal_render($output);
  return NULL;
}
